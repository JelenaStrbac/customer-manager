{"version":3,"sources":["components/UI/ErrorMessage/ErrorMessage.js","components/UI/Input/Input.js","components/helper/CheckValidity.js","components/UI/Button/Button.js","components/Logo/Logo.js","components/UI/Icon/Icon.js","store/actions/auth.js","store/actions/actionTypes.js","components/UI/Spinner/Spinner.js","containers/Auth/Auth.js","components/UI/Input/Checkbox/Checkbox.js","containers/Tools/Filter/Checkboxes/Checkboxes.js","containers/Tools/Filter/Filter.js","store/actions/tools.js","containers/Tools/Sort/Sort.js","containers/Toolbar/Toolbar.js","components/Customers/Customer.js","containers/Tools/Pagination/Pagination.js","containers/Customers/CustomersList/CustomersList.js","components/helper/SortingFunctions.js","store/actions/customers.js","components/UI/Circle/Circle.js","containers/Customers/CustomerForm.js","containers/Customers/CustomerCreate/CustomerCreate.js","containers/Customers/CustomerEdit/CustomerEdit.js","components/UI/Modal/Modal.js","components/UI/Table/TableRow/TableRow.js","components/UI/Table/Table.js","components/UI/Circle/ProfitabilityCircle.js","containers/Customers/CustomerShow/CustomerShow.js","containers/Auth/Logout/Logout.js","containers/Tools/Search/Search.js","containers/Navbar/Navbar.js","components/Documentation/Documentation.js","components/UI/Modal/Backdrop/Backdrop.js","containers/Home/Home.js","components/helper/PrivateRoute.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/customers.js","store/reducers/tools.js","axios.js","store/sagas/auth.js","store/sagas/customers.js","store/sagas/index.js","index.js"],"names":["ErrorMessage","props","className","children","Input","inputElement","inputClasses","labelClass","contentClass","value","push","useState","isFocusRemoved","setIsFocusRemoved","handleBlur","renderError","message","invalid","elementType","autoComplete","join","elementConfig","onChange","changed","placeholder","onBlur","label","options","numeral","numeralThousandsGroupStyle","obj","map","el","idx","key","type","disabled","checkValidity","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isPhone","isPositive","parseInt","replace","Button","onClick","clicked","Logo","width","height","viewBox","fill","xmlns","cx","cy","r","d","fontFamily","Icon","icon","authSuccess","idToken","userId","checkAuthTimeout","expirationTime","Spinner","connect","state","isLoading","auth","loading","error","isAuthenticated","dispatch","onAuth","email","password","actions","console","log","validation","valid","touched","authForm","setAuthForm","formElementsArray","id","config","form","onSubmit","e","preventDefault","shouldValidate","inputIdentifier","updatedAuthForm","updatedFormElement","target","formIsValid","inputChangedHandler","to","Checkbox","name","checked","filterQueryOneFromRedux","tools","filterQueryOne","filterQueryTwoFromRedux","filterQueryTwo","handleChange","onCheck","title","checkboxes","onFilterOne","query","onFilterTwo","sortQueryFromRedux","sortQuery","onSort","onResetAllFilters","location","useLocation","classNames","OpenedMobileToolbar","open","ClosedMobileToolbar","pathname","Customer","content","showContent","setShowContent","activeSelected","setActiveSelected","openContent","text","handleClick","stopPropagation","includes","phone","size","industry","operatingRevenue","toFixed","operatingExpenses","Active","Pagination","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","handlePageClick","containerClassName","subContainerClassName","activeClassName","disabledClassName","handleFilteringAndSorting","allCustomers","field","searchQuery","filteredCustomersArray","filter","customerData","companyName","toLowerCase","elm","Object","values","some","item","elem","sortArr","sort","a","b","arr","sorts","customers","token","fetchAllCustomers","fetchAllCustomersRef","useRef","tokenRef","userIdRef","useEffect","current","resultArr","setResultArr","setPaginationDetails","currentPaginatedResult","data","Math","ceil","perPage","offset","currentPage","paginationDetails","showAllCustomers","slice","website","selectedPage","selected","Circle","checkmarkSvgCircle","color","radius","stroke","overflow","regNumber","address","employees","financialRevenue","financialExpenses","otherRevenue","otherExpenses","taxation","fixedAssets","currentAssets","equity","longTermLiabilities","shortTermLiabilities","customerForm","setCustomerForm","setFormIsValid","initialFormValuesHandlerRef","initialCustomerFormForEditing","formElementIdentifier","initialFormValues","initialFormValuesRef","mainInfoArray","industryInfoArray","financialInfoArray","formPart","array","resultValidity","validityArray","forEach","settingValidity","total","reduce","acc","curr","progress","true","style","backgroundColor","updatedCustomerForm","formData","k","isAddedSuccessfully","addCustomer","particularCustomer","isEditedSuccessfully","editCustomer","useRouteMatch","params","Modal","show","ReactDOM","createPortal","onDismiss","document","querySelector","TableRow","Table","ProfitabilityCircle","circumference","normalizedRadius","PI","strokeDashoffset","percent","colorOne","strokeWidth","colorTwo","strokeDasharray","strokeLinecap","transform","x","y","dominantBaseline","textAnchor","opacity","isDeletedSuccessfully","fetchOneCustomer","deleteCustomer","showModal","setShowModal","closeModal","match","fetchOneCustomerRef","idRef","ebit","finResult","otherResult","netIncomePriorTax","netIncome","totalAssets","totalFunds","currentRatio","noa","fixedAssetsTurnoverRatio","totalAssetsTurnoverRatio","debtToEquityRatio","ebitMargin","profitMargin","roa","roe","particularCustomerShow","toLocaleString","Fragment","from","onLogout","searchQueryFromRedux","onSearch","querySearch","setQuerySearch","search","_","debounce","inputChangeHandler","Navbar","toolbarClicked","Documentation","href","rel","Backdrop","OpenBackdrop","CloseBackdrop","toolbarClosedHandler","Home","toolbarIsVisible","setToolbarIsVisible","basename","process","path","exact","component","CustomersList","CustomerCreate","CustomerEdit","CustomerShow","PrivateRoute","Component","rest","render","onAutoLogin","onAutoLoginRef","Auth","Boolean","window","hostname","initialState","authStart","action","authSucess","authFail","authLogout","authReducer","addCustomerStart","addCustomerSucess","newCustomer","customerId","addCustomerFail","addCustomerFinished","fetchCustomersStart","fetchCustomersSuccess","res","fetchCustomersFail","fetchCustomerStart","fetchCustomerSuccess","fetchCustomerFail","editCustomerStart","editCustomerSuccess","editedCustomer","editCustomerFail","editCustomerFinished","deleteCustomerStart","deleteCustomerSuccess","deleteCustomerFail","deleteCustomerFinished","customerReducer","Micro","Small","Medium","Large","Education","Finance","Health","IT","Production","Other","resetAllFilters","toolsReducer","instance","axios","create","baseURL","authUserSaga","checkAuthTimeoutSaga","logoutSaga","authCheckStateSaga","put","returnSecureToken","call","post","response","Date","getTime","expiresIn","expirationDate","localStorage","localId","delay","getItem","customerAddSaga","fetchAllCustomersSaga","fetchOneCustomerSaga","customerEditSaga","customerDeleteSaga","get","fetchedCustomers","fetchedCustomer","patch","delete","watchAuthSaga","watchCustomerSaga","all","takeLatest","composeEnhancers","compose","reducers","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"8PAQeA,G,YAJM,SAACC,GACpB,OAAO,yBAAKC,UAAU,gBAAgBD,EAAME,YCmI/BC,EAlID,SAACH,GACb,IAAII,EAAe,KACbC,EAAe,CAAC,gBAEhBC,EAAa,CAAC,SAEdC,EAAe,CAAC,WAClBP,EAAMQ,OACRD,EAAaE,KAAK,eARG,MAWqBC,oBAAS,GAX9B,mBAWhBC,EAXgB,KAWAC,EAXA,KAYjBC,EAAa,WACjBD,GAAkB,IAGdE,EAAc,SAACC,GACnB,GAAIf,EAAMgB,SAAWL,EACnB,OAAO,kBAAC,EAAD,KAAeI,IAI1B,OAAQf,EAAMiB,aACZ,IAAK,QACHb,EACE,oCACCU,EAAYd,EAAMe,SACjB,yCACEG,aAAa,MACbjB,UAAWI,EAAac,KAAK,MACzBnB,EAAMoB,cAHZ,CAIEZ,MAAOR,EAAMQ,MACba,SAAUrB,EAAMsB,QAChBC,YAAavB,EAAMuB,YACnBC,OAAQX,KAEV,2BAAOZ,UAAWK,EAAWa,KAAK,MAChC,0BAAMlB,UAAWM,EAAaY,KAAK,MAAOnB,EAAMyB,SAItD,MACF,IAAK,gBACHrB,EACE,oCACCU,EAAYd,EAAMe,SACjB,kBAAC,IAAD,CACEW,QAAS,CACPC,SAAS,EACTC,2BAA4B,YAE9B3B,UAAWI,EAAac,KAAK,KAC7BX,MAAOR,EAAMQ,MACba,SAAUrB,EAAMsB,QAChBE,OAAQX,EACRU,YAAavB,EAAMuB,cAErB,2BAAOtB,UAAWK,EAAWa,KAAK,MAChC,0BAAMlB,UAAWM,EAAaY,KAAK,MAAOnB,EAAMyB,SAItD,MACF,IAAK,WACHrB,EACE,yBAAKH,UAAU,kBACb,2BAAOA,UAAU,iBAAiBD,EAAMyB,OACvCzB,EAAMoB,cAAcS,IAAIC,KAAI,SAACC,EAAIC,GAAL,OAC3B,yBAAKC,IAAKD,EAAK/B,UAAU,iBACvB,2BAAOA,UAAU,aACd8B,EAAGN,MACJ,2BACES,KAAMH,EAAGG,KACTb,SAAUrB,EAAMsB,QAChBW,IAAKF,EAAGN,MACRP,aAAa,MACbV,MAAOuB,EAAGN,MACVF,YAAavB,EAAMuB,cAErB,0BAAMtB,UAAU,oBAM1B,MACF,IAAK,SACHG,EACE,oCACE,4BACEH,UAAU,cACVoB,SAAUrB,EAAMsB,QAChBd,MAAOR,EAAMQ,OAEb,4BAAQA,MAAM,GAAG2B,UAAQ,GAAzB,8BAGCnC,EAAMoB,cAAcS,IAAIC,KAAI,SAACC,GAAD,OAC3B,4BAAQE,IAAKF,EAAIvB,MAAOuB,GACrBA,OAIP,2BAAO9B,UAAWK,EAAWa,KAAK,MAChC,0BAAMlB,UAAWM,EAAaY,KAAK,MAAOnB,EAAMyB,SAItD,MACF,QACErB,EACE,oCACE,yCACEc,aAAa,MACbjB,UAAWI,EAAac,KAAK,MACzBnB,EAAMoB,cAHZ,CAIEZ,MAAOR,EAAMQ,MACba,SAAUrB,EAAMsB,QAChBC,YAAavB,EAAMuB,eAErB,2BAAOtB,UAAWK,EAAWa,KAAK,MAChC,0BAAMlB,UAAWM,EAAaY,KAAK,MAAOnB,EAAMyB,SAM1D,OAAO,yBAAKxB,UAAU,SAASG,ICrIpBgC,EAAgB,SAAC5B,EAAO6B,GACnC,IAAIC,GAAU,EACd,IAAKD,EACH,OAAO,EAoBT,GAjBIA,EAAME,WACRD,GACoB,kBAAV9B,EAAsC,KAAjBA,EAAMgC,OAAgBhC,IAAU8B,GAG7DD,EAAMI,YACRH,EAAU9B,EAAMkC,QAAUL,EAAMI,WAAaH,GAG3CD,EAAMM,YACRL,EAAU9B,EAAMkC,QAAUL,EAAMM,WAAaL,GAG3CD,EAAMK,SACRJ,EAAU9B,EAAMkC,SAAWL,EAAMK,QAAUJ,GAGzCD,EAAMO,QAAS,CAEjBN,EADgB,wIACEO,KAAKrC,IAAU8B,EAGnC,GAAID,EAAMS,QAAS,CAEjBR,EADgB,oGACEO,KAAKrC,IAAU8B,EASnC,OANID,EAAMU,aACRT,GACoB,kBAAV9B,EAAqBwC,SAASxC,EAAMyC,QAAQ,IAAK,KAAOzC,IAC9D,GAAK8B,GAGJA,GCvBMY,G,MAZA,SAAClD,GACd,OACE,4BACEmC,SAAUnC,EAAMmC,SAChBgB,QAASnD,EAAMoD,QACfnD,UAAU,UAETD,EAAME,YCkBEmD,G,MAzBF,SAACrD,GACZ,OACE,yBAAKC,UAAU,QACb,yBACEqD,MAAM,MACNC,OAAO,KACPC,QAAQ,aACRC,KAAK,OACLC,MAAM,8BAEN,4BAAQC,GAAG,OAAOC,GAAG,OAAOC,EAAE,OAAOJ,KAAK,YAC1C,4BAAQE,GAAG,OAAOC,GAAG,OAAOC,EAAE,OAAOJ,KAAK,YAC1C,4BAAQE,GAAG,OAAOC,GAAG,OAAOC,EAAE,OAAOJ,KAAK,YAC1C,4BAAQE,GAAG,OAAOC,GAAG,OAAOC,EAAE,OAAOJ,KAAK,YAC1C,4BAAQE,GAAG,OAAOC,GAAG,OAAOC,EAAE,OAAOJ,KAAK,YAC1C,0BACEK,EAAE,kiUACFL,KAAK,UACLM,WAAW,eCZNC,G,MANF,SAAChE,GACZ,OACE,uBAAGC,UAAS,gBAAWD,EAAMiE,UCEpBC,EAAc,SAACC,EAASC,GACnC,MAAO,CACLlC,KCRwB,eDSxBiC,UACAC,WAqBSC,EAAmB,SAACC,GAC/B,MAAO,CACLpC,KC7B8B,qBD8B9BoC,eAAgBA,IE5BLC,G,MAJC,WACd,OAAO,yBAAKtE,UAAU,UAAf,gBCoKMuE,eAdS,SAACC,GACvB,MAAO,CACLC,UAAWD,EAAME,KAAKC,QACtBC,MAAOJ,EAAME,KAAKE,MAClBC,gBAAwC,OAAvBL,EAAME,KAAKR,YAIL,SAACY,GAC1B,MAAO,CACLC,OAAQ,SAACC,EAAOC,GAAR,OAAqBH,EH7Ib,SAACE,EAAOC,GAC1B,MAAO,CACLhD,KCtBqB,YDuBrB+C,QACAC,YGyIsCC,CAAaF,EAAOC,QAI/CV,EA3JF,SAACxE,GACZoF,QAAQC,IAAIrF,GADU,MAEUU,mBAAS,CACvCuE,MAAO,CACLhE,YAAa,QACbG,cAAe,CACbc,KAAM,QACNT,MAAO,SAETjB,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVK,SAAS,GAEX7B,QAAS,kCACTwE,OAAO,EACPC,SAAS,EACTvB,KAAM,YAERiB,SAAU,CACRjE,YAAa,QACbG,cAAe,CACbc,KAAM,WACNT,MAAO,YAETjB,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVE,UAAW,GAEb1B,QAAS,2CACTwE,OAAO,EACPC,SAAS,EACTvB,KAAM,UAjCY,mBAEfwB,EAFe,KAELC,EAFK,KAgEhBC,EAAoB,GAC1B,IAAK,IAAI1D,KAAOwD,EACdE,EAAkBlF,KAAK,CACrBmF,GAAI3D,EACJ4D,OAAQJ,EAASxD,KAIrB,IA6BI4C,EA7BAiB,EACF,0BAAM7F,UAAU,OAAOiB,aAAa,MAAM6E,SAdpB,SAACC,GACvBA,EAAEC,iBACFjG,EAAMgF,OAAOS,EAASR,MAAMzE,MAAOiF,EAASP,SAAS1E,SAalDmF,EAAkB7D,KAAI,SAACC,EAAIC,GAC1B,OACE,yBAAKC,IAAKD,EAAK/B,UAAU,aACvB,kBAAC,EAAD,CAAMgE,KAAMlC,EAAG8D,OAAO5B,OACtB,kBAAC,EAAD,CACEhC,IAAKF,EAAG6D,GACR3E,YAAac,EAAG8D,OAAO5E,YACvBG,cAAeW,EAAG8D,OAAOzE,cACzBZ,MAAOuB,EAAG8D,OAAOrF,MACjB0F,eAAgBnE,EAAG8D,OAAOP,WAC1BtE,SAAUe,EAAG8D,OAAON,MACpBxE,QAASgB,EAAG8D,OAAO9E,QACnByE,QAASzD,EAAG8D,OAAOL,QACnB/D,MAAOM,EAAG8D,OAAOzE,cAAcK,MAC/BH,QAAS,SAAC0E,GAAD,OAnDO,SAACA,EAAGG,GAC9B,IAAMC,EAAe,eAChBX,GAECY,EAAkB,eAAQD,EAAgBD,IAChDE,EAAmB7F,MAAQwF,EAAEM,OAAO9F,MAEpC6F,EAAmBd,MAAQnD,EACzBiE,EAAmB7F,MACnB6F,EAAmBf,YAGrBe,EAAmBb,SAAU,EAC7BY,EAAgBD,GAAmBE,EAEnC,IAAIE,GAAc,EAClB,IAAK,IAAIJ,KAAmBC,EAC1BG,EAAcH,EAAgBD,GAAiBZ,OAASgB,EAE1Db,EAAYU,GAgCcI,CAAoBR,EAAGjE,EAAG6D,WAKlD,kBAAC,EAAD,eASJ,GALI5F,EAAM0E,YACRoB,EAAO,kBAAC,EAAD,OAIL9F,EAAM6E,MACR,OAAQ7E,EAAM6E,MAAM9D,SAClB,IAAK,kBACH8D,EAAQ,8DACR,MACF,IAAK,mBACHA,EAAQ,qCACR,MACF,IAAK,gBACHA,EAAQ,8CACR,MACF,QACEA,EAAQ,+BAId,OACE,yBAAK5E,UAAU,QACZD,EAAM8E,gBAAkB,kBAAC,IAAD,CAAU2B,GAAG,MAAS,KAC/C,kBAAC,EAAD,MACA,yBAAKxG,UAAU,kBACb,yBAAKA,UAAU,WAAf,8BAEE,yBAAKA,UAAU,kBAAf,wCAIF,yBAAKA,UAAU,aACb,6BACE,0BAAMA,UAAU,aAAhB,SADF,oBAGCD,EAAM6E,MAAQ,kBAAC,EAAD,KAAeA,GAAwB,KACrDiB,Q,yBC5IIY,G,kBANE,SAAC,GAA4D,IAAD,IAAzDxE,YAAyD,MAAlD,WAAkD,EAAtCyE,EAAsC,EAAtCA,KAAsC,IAAhCC,eAAgC,SAAfvF,EAAe,EAAfA,SAC5D,OACE,2BAAOa,KAAMA,EAAMyE,KAAMA,EAAMC,QAASA,EAASvF,SAAUA,MCuChDmD,eAPS,SAACC,GACvB,MAAO,CACLoC,wBAAyBpC,EAAMqC,MAAMC,eACrCC,wBAAyBvC,EAAMqC,MAAMG,kBAID,KAAzBzC,EArCI,SAACxE,GAClB,IAAMkH,EAAe,SAAClB,GACpBhG,EAAMmH,QAAQnB,EAAEM,OAAOK,OAGzB,OACE,0BAAM1G,UAAU,cACd,yBAAKA,UAAU,kBACb,2BAAOA,UAAU,iBAAiBD,EAAMoH,OACxC,yBAAKnH,UAAU,mBACZD,EAAMqH,WAAWvF,KAAI,SAACC,GAAD,OACpB,2BAAOE,IAAKF,EAAG4E,KAAM1G,UAAU,aAC7B,6BAAM8B,EAAG4E,MACT,kBAAC,EAAD,CACEA,KAAM5E,EAAG4E,KACTC,QACE5G,EAAM6G,wBAAwB9E,EAAG4E,OACjC3G,EAAMgH,wBAAwBjF,EAAG4E,MAEnCtF,SAAU6F,IAEZ,0BAAMjH,UAAU,wBCwBfuE,cAAQ,MAPI,SAACO,GAC1B,MAAO,CACLuC,YAAa,SAACC,GAAD,OAAWxC,EC3BE,SAACwC,GAC7B,MAAO,CACLrF,KNiC4B,mBMhC5BqF,SDwBiCpC,CAAuBoC,KACxDC,YAAa,SAACD,GAAD,OAAWxC,ECrBE,SAACwC,GAC7B,MAAO,CACLrF,KN2B4B,mBM1B5BqF,SDkBiCpC,CAAuBoC,QAI7C/C,EA3CA,SAACxE,GAgBd,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAMgE,KAAK,WACX,yCAEF,kBAAC,EAAD,CACEmD,MAAM,eACNC,WAvBc,CAClB,CAAEV,KAAM,SACR,CAAEA,KAAM,SACR,CAAEA,KAAM,UACR,CAAEA,KAAM,UAoBJQ,QAASnH,EAAMsH,cAEjB,kBAAC,EAAD,CACEF,MAAM,WACNC,WArBW,CACf,CAAEV,KAAM,aACR,CAAEA,KAAM,WACR,CAAEA,KAAM,UACR,CAAEA,KAAM,MACR,CAAEA,KAAM,cACR,CAAEA,KAAM,UAgBJQ,QAASnH,EAAMwH,kBEMRhD,G,MAAAA,aAZS,SAACC,GACvB,MAAO,CACLgD,mBAAoBhD,EAAMqC,MAAMY,cAIT,SAAC3C,GAC1B,MAAO,CACL4C,OAAQ,SAACJ,GAAD,OAAWxC,ED7BE,SAACwC,GACxB,MAAO,CACLrF,KNwCsB,aMvCtBqF,SC0B4BpC,CAAkBoC,QAInC/C,EArCF,SAACxE,GACZ,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CAAMgE,KAAK,SACX,uCAEF,yBAAKhE,UAAU,UACb,4BACEO,MAAOR,EAAMyH,oBAAsB,GACnCpG,SAAU,SAAC2E,GAAD,OAAOhG,EAAM2H,OAAO3B,EAAEM,OAAO9F,SAEvC,4BAAQA,MAAM,GAAG2B,UAAQ,GAAzB,YAGA,4BAAQ3B,MAAM,MAAd,cACA,4BAAQA,MAAM,MAAd,cACA,4BAAQA,MAAM,OAAd,wBACA,4BAAQA,MAAM,OAAd,gCC6BKgE,cAAQ,MANI,SAACO,GAC1B,MAAO,CACL6C,kBAAmB,kBAAM7C,EFfpB,CACL7C,KNoB6B,0BQFlBsC,EA1CC,SAACxE,GACf,IAAM6H,EAAWC,cAEjB,OACE,yBACE7H,UAAW8H,IAAW,UAAW,CAC/BC,oBAAqBhI,EAAMiI,KAC3BC,qBAAsBlI,EAAMiI,QAG9B,yBAAKhI,UAAU,eACb,kBAAC,EAAD,OAGF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,cAAckD,QAAS,kBAAMnD,EAAM4H,sBAChD,kBAAC,IAAD,CAAMnB,GAAG,KACP,kBAAC,EAAD,CAAMxC,KAAK,SADb,UAIF,yBAAKhE,UAAU,eACb,kBAAC,IAAD,CAAMwG,GAAG,kBACP,kBAAC,EAAD,CAAMxC,KAAK,SADb,oBAMmB,MAAtB4D,EAASM,SACR,oCACE,kBAAC,EAAD,MADF,IACW,kBAAC,EAAD,OAET,SCyFKC,G,YA9HE,SAACpI,GAAU,IAmBtBqI,EAnBsB,EAEY3H,mBAAS,OAFrB,mBAEnB4H,EAFmB,KAENC,EAFM,OAGkB7H,mBAC1C,mCAJwB,mBAGnB8H,EAHmB,KAGHC,EAHG,KAOpBC,EAAc,SAACC,GACnBJ,EAAeI,IAGXC,EAAc,SAAC5C,GACnBA,EAAE6C,kBACE7C,EAAEM,OAAOrG,UAAU6I,SAAS,WAAgC,KAAnBN,GAC3CC,EAAkB,IAEpBA,EAAkBzC,EAAEM,OAAOrG,YAI7B,OAAQqI,GACN,IAAK,MACHD,EACE,yBAAKpI,UAAU,mBACb,6BACE,qCADF,IACiBD,EAAM+I,OAEvB,6BACE,qCADF,IACiB/I,EAAMiF,QAI3B,MACF,IAAK,MACHoD,EACE,yBAAKpI,UAAU,mBACb,6BACE,4CADF,IACwBD,EAAMgJ,MAE9B,6BACE,wCADF,IACoBhJ,EAAMiJ,WAI9B,MACF,IAAK,QACHZ,EACE,yBAAKpI,UAAU,mBACb,6BACE,wCAAiB,IADnB,eAEWD,EAAMkJ,iBAAmB,KAAMC,QAAQ,GAFlD,UAIA,6BACE,2CAAoB,KACjBnJ,EAAMkJ,iBAAmBlJ,EAAMoJ,mBAChCpJ,EAAMkJ,iBACN,IACF,EAHC,YAKOlJ,EAAMkJ,iBAAmBlJ,EAAMoJ,mBAC/BpJ,EAAMkJ,iBACR,KACAC,QAAQ,GARb,aAaP,MACF,QACEd,EACE,yBAAKpI,UAAU,mBAAf,gCAIN,OACE,yBAAKA,UAAU,YACb,yBAAKA,UAAU,iBACb,6BACE,yBAAKA,UAAU,UACb,yBAAKA,UAAU,cACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,iBAEjB,yBAAKA,UAAU,qBAEjB,4BAAKD,EAAM2G,MACX,yBAAK1G,UAAU,iBACb,uBACEA,UAAW8H,IAAW,eAAgB,qBAAsB,CAC1DsB,OAA2B,oCAAnBb,IAEVrF,QAAS,SAAC6C,GACR4C,EAAY5C,GACZ0C,EAAY,UAGhB,uBACEzI,UAAW8H,IAAW,eAAgB,iBAAkB,CACtDsB,OAA2B,gCAAnBb,IAEVrF,QAAS,SAAC6C,GACR4C,EAAY5C,GACZ0C,EAAY,UAGhB,uBACEzI,UAAW8H,IAAW,eAAgB,gBAAiB,CACrDsB,OAA2B,+BAAnBb,IAEVrF,QAAS,SAAC6C,GACR4C,EAAY5C,GACZ0C,EAAY,cAKpB,yBAAKzI,UAAU,gBACZoI,EACD,kBAAC,IAAD,CAAM5B,GAAE,gBAAWzG,EAAM4F,IAAM3F,UAAU,UAAzC,Y,iBCjGOqJ,G,MArBI,SAACtJ,GAClB,OACE,yBAAKC,UAAU,cACb,kBAAC,IAAD,CACEsJ,cAAe,kBAAC,EAAD,CAAMtF,KAAM,sBAC3BuF,UAAW,kBAAC,EAAD,CAAMvF,KAAM,uBACvBwF,WAAY,MACZC,eAAgB,WAChBC,UAAW3J,EAAM2J,UACjBC,qBAAsB,EACtBC,mBAAoB,EACpBC,aAAc9J,EAAM+J,gBACpBC,mBAAoB,aACpBC,sBAAuB,mBACvBC,gBAAiB,SACjBC,kBAAmB,gBCVrBC,EAA4B,SAACtD,EAAOuD,GAAkB,ICX/BC,EDYnBC,EAA2DzD,EAA3DyD,YAAa7C,EAA8CZ,EAA9CY,UAAWX,EAAmCD,EAAnCC,eAAgBE,EAAmBH,EAAnBG,eAE5CuD,EAAyBH,EAC1BI,QAAO,SAAC1I,GAAD,OACNA,EAAG2I,aAAaC,YAAYC,cAAc9B,SAASyB,MAEpDE,QAAO,SAACI,GAAD,OACNC,OAAOC,OAAOhE,GAAgBiE,MAAK,SAACC,GAAD,OAAUA,MACzClE,EAAe8D,EAAIH,aAAa1B,SAGrCyB,QAAO,SAACS,GAAD,OACNJ,OAAOC,OAAO9D,GAAgB+D,MAAK,SAACC,GAAD,OAAUA,MACzChE,EAAeiE,EAAKR,aAAazB,aAIrCkC,EAAU,GACd,OAAQzD,GACN,IAAK,KC/BoB4C,EDgCyB,cAAhDa,EAAwBX,EC/BjBY,MAAK,SAACC,EAAGC,GAClB,OAAID,EAAEX,aAAaJ,GAASgB,EAAEZ,aAAaJ,GAClC,EAELgB,EAAEZ,aAAaJ,GAASe,EAAEX,aAAaJ,IACjC,EAEH,KDyBL,MACF,IAAK,KACHa,ECvBkB,SAACI,EAAKjB,GAC5B,OAAOiB,EAAIH,MAAK,SAACC,EAAGC,GAClB,OAAID,EAAEX,aAAaJ,GAASgB,EAAEZ,aAAaJ,IACjC,EAENgB,EAAEZ,aAAaJ,GAASe,EAAEX,aAAaJ,GAClC,EAEF,KDeKkB,CAAehB,EAAwB,eACjD,MACF,IAAK,MACHW,ECdoB,SAACI,EAAKjB,GAC9B,OAAOiB,EAAIH,MACT,SAACC,EAAGC,GAAJ,OAAUtI,SAASqI,EAAEX,aAAaJ,IAAUtH,SAASsI,EAAEZ,aAAaJ,ODYxDkB,CAAiBhB,EAAwB,oBACnD,MACF,IAAK,MACHW,ECXqB,SAACI,EAAKjB,GAC/B,OAAOiB,EAAIH,MACT,SAACC,EAAGC,GAAJ,OAAUtI,SAASsI,EAAEZ,aAAaJ,IAAUtH,SAASqI,EAAEX,aAAaJ,ODSxDkB,CAAkBhB,EAAwB,oBACpD,MACF,QACEW,EAAUX,EAEd,OAAOW,GA6HM3G,eAjBS,SAACC,GACvB,MAAO,CACL4F,aAAc5F,EAAMgH,UAAUpB,aAC9BqB,MAAOjH,EAAME,KAAKR,QAClBC,OAAQK,EAAME,KAAKP,OACnBM,UAAWD,EAAMgH,UAAU7G,QAC3BkC,MAAOrC,EAAMqC,UAIU,SAAC/B,GAC1B,MAAO,CACL4G,kBAAmB,SAACD,EAAOtH,GAAR,OACjBW,EE3G2B,SAAC2G,EAAOtH,GACvC,MAAO,CACLlC,KbrC+B,sBasC/BwJ,QACAtH,UFuGWe,CAA0BuG,EAAOtH,QAIjCI,EA1HO,SAACxE,GAErB,IAAM4L,EAAuBC,iBAAO7L,EAAM2L,mBACpCG,EAAWD,iBAAO7L,EAAM0L,OACxBK,EAAYF,iBAAO7L,EAAMoE,QAE/B4H,qBAAU,WACRJ,EAAqBK,QAAQH,EAASG,QAASF,EAAUE,WACxD,IAR4B,MAWGvL,mBAAS,IAXZ,mBAWxBwL,EAXwB,KAWbC,EAXa,KAa/BH,qBAAU,WACR,IAAMb,EAAUf,EAA0BpK,EAAM8G,MAAO9G,EAAMqK,cAE7D8B,EAAahB,GACbiB,GAAqB,SAACC,GAAD,mBAAC,eACjBA,GADgB,IAEnBC,KAAMnB,EACNxB,UAAW4C,KAAKC,KAAKrB,EAAQzI,OAAS2J,EAAuBI,gBAE9D,CAACzM,EAAM8G,MAAO9G,EAAMqK,eAtBQ,MAyBmB3J,mBAAS,CACzDgM,OAAQ,EACRJ,KAAM,GACNG,QAAS,GACTE,YAAa,EACbhD,UAAW,IA9BkB,mBAyBxBiD,EAzBwB,KAyBLR,EAzBK,KA4C/BJ,qBAAU,WACRI,GAAqB,SAACC,GAAD,mBAAC,eACjBA,GADgB,IAEnBC,KAAMtM,EAAMqK,aACZV,UAAW4C,KAAKC,KACdxM,EAAMqK,aAAa3H,OAAS2J,EAAuBI,gBAGtD,CAACzM,EAAMqK,eAEV,IAAIwC,EAAmB,KAIjBC,GAHuBhC,OAAOC,OAAO/K,EAAM8G,OAAOkE,MAAK,SAACjJ,GAAD,OAAQA,KACjEmK,EACAlM,EAAMqK,cACyByC,MACjCF,EAAkBF,OAClBE,EAAkBF,OAASE,EAAkBH,SAwB/C,OArBIK,IACFD,EAAmBC,EAAMhL,KAAI,SAACC,GAAD,OAC3B,kBAAC,EAAD,CACEE,IAAKF,EAAG6D,GACRA,GAAI7D,EAAG6D,GACPe,KAAM5E,EAAG2I,aAAaC,YACtBoC,QAAShL,EAAG2I,aAAaqC,QACzB7D,iBAAkBnH,EAAG2I,aAAaxB,iBAClCE,kBAAmBrH,EAAG2I,aAAatB,kBACnCJ,KAAMjH,EAAG2I,aAAa1B,KACtBC,SAAUlH,EAAG2I,aAAazB,SAC1BF,MAAOhH,EAAG2I,aAAa3B,MACvB9D,MAAOlD,EAAG2I,aAAazF,YAKzBjF,EAAM0E,YACRmI,EAAmB,kBAAC,EAAD,OAInB,yBAAK5M,UAAU,iBACb,yBAAKA,UAAU,+BACb,kBAAC,IAAD,CAAMwG,GAAG,OAAOxG,UAAU,qBACxB,yBAAKA,UAAU,QAAf,KACA,+CAGJ,6BACE,kBAAC,EAAD,CACE0J,UAAWiD,EAAkBjD,UAC7BI,gBA9DgB,SAAC/D,GACvB,IAAMgH,EAAehH,EAAEiH,SACjBP,EAASM,EAAeJ,EAAkBH,QAEhDL,EAAqB,2BAChBQ,GADe,IAElBD,YAAaK,EACbN,OAAQA,QAyDN,yBAAKzM,UAAU,sBACZ4M,GAAsC,WG1GlCK,G,kBArCA,SAAClN,GACd,IAEImN,EACJ,GAAInN,EAAMuF,MACR,OAAQvF,EAAMoN,OACZ,IAAK,UACHD,EAAqB,gBACrB,MACF,IAAK,UACHA,EAAqB,gBACrB,MACF,IAAK,UACHA,EAAqB,kBACrB,MACF,QACEA,EAAqB,QAGzBA,EAAqB,GAGvB,OACE,yBAAK5J,OAAQ8J,GAAY/J,MAAO+J,IAC9B,4BACEpN,UAAWkN,EACXG,OAAO,OACP7J,KAAK,qBACL8J,SAAS,SACT1J,EA5BS,EA6BTF,GA7BS,EA8BTC,GA9BS,OC8hBFY,eARS,SAACC,GACvB,MAAO,CACLiH,MAAOjH,EAAME,KAAKR,QAClBC,OAAQK,EAAME,KAAKP,OACnBM,UAAWD,EAAMgH,UAAU7G,WAIS,KAAzBJ,EAzhBM,SAACxE,GAAW,IAAD,EACUU,mBAAS,CAC/CiK,YAAa,CACX1J,YAAa,QACbG,cAAe,CACbc,KAAM,OACNT,MAAO,eACPF,YAAa,oBAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVE,UAAW,EACXE,UAAW,IAEb5B,QAAS,8CACTwE,OAAO,EACPC,SAAS,GAEXuH,QAAS,CACP9L,YAAa,QACbG,cAAe,CACbc,KAAM,MACNT,MAAO,UACPF,YAAa,gCAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,GAEZxB,QAAS,+CACTwE,OAAO,EACPC,SAAS,GAEXgI,UAAW,CACTvM,YAAa,QACbG,cAAe,CACbc,KAAM,SACNT,MAAO,sBACPF,YAAa,kBAEfR,QAAS,gDACTP,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVG,OAAQ,GAEV6C,OAAO,EACPC,SAAS,GAEXiI,QAAS,CACPxM,YAAa,QACbG,cAAe,CACbc,KAAM,OACNT,MAAO,UACPF,YAAa,wBAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVE,UAAW,EACXE,UAAW,IAEb5B,QAAS,iDACTwE,OAAO,EACPC,SAAS,GAEXuD,MAAO,CACL9H,YAAa,QACbG,cAAe,CACbc,KAAM,QACNT,MAAO,QACPF,YAAa,uCAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVO,SAAS,GAEX/B,QAAS,sDACTwE,OAAO,EACPC,SAAS,GAEXP,MAAO,CACLhE,YAAa,QACbG,cAAe,CACbc,KAAM,QACNT,MAAO,QACPF,YAAa,yBAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVK,SAAS,GAEX7B,QAAS,kCACTwE,OAAO,EACPC,SAAS,GAEXyD,SAAU,CACRhI,YAAa,SACbG,cAAe,CACbc,KAAM,SACNT,MAAO,WACPI,IAAK,CAAC,YAAa,UAAW,SAAU,KAAM,aAAc,UAE9DrB,MAAO,GACP8E,WAAY,CACV/C,UAAU,GAEZgD,OAAO,EACPC,SAAS,GAEXwD,KAAM,CACJ/H,YAAa,SACbG,cAAe,CACbc,KAAM,SACNT,MAAO,eACPI,IAAK,CAAC,QAAS,QAAS,SAAU,UAEpCrB,MAAO,GACP8E,WAAY,CACV/C,UAAU,GAEZgD,OAAO,EACPC,SAAS,GAEXkI,UAAW,CACTzM,YAAa,QACbG,cAAe,CACbc,KAAM,SACNT,MAAO,sBACPF,YAAa,kBAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,GAEX0D,iBAAkB,CAChBjI,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,+BACPF,YAAa,gBAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,GAEX4D,kBAAmB,CACjBnI,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,qBACPF,YAAa,eAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,GAEXmI,iBAAkB,CAChB1M,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,oBACPF,YAAa,eAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,GAEXoI,kBAAmB,CACjB3M,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,qBACPF,YAAa,cAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,GAEXqI,aAAc,CACZ5M,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,kCACPF,YAAa,cAEfR,QAAS,4CACTP,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdwC,OAAO,EACPC,SAAS,GAEXsI,cAAe,CACb7M,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,mCACPF,YAAa,YAEfR,QAAS,4CACTP,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdwC,OAAO,EACPC,SAAS,GAEXuI,SAAU,CACR9M,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,6BACPF,YAAa,cAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,GAEXwI,YAAa,CACX/M,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,eACPF,YAAa,kBAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,GAEXyI,cAAe,CACbhN,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,iBACPF,YAAa,kBAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,GAEX0I,OAAQ,CACNjN,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,uBACPF,YAAa,gBAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,GAEX2I,oBAAqB,CACnBlN,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,wBACPF,YAAa,gBAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,GAEX4I,qBAAsB,CACpBnN,YAAa,gBACbG,cAAe,CACbc,KAAM,SACNT,MAAO,yBACPF,YAAa,gBAEff,MAAO,GACP8E,WAAY,CACV/C,UAAU,EACVQ,YAAY,GAEdhC,QAAS,4CACTwE,OAAO,EACPC,SAAS,KA7UiB,mBACvB6I,EADuB,KACTC,EADS,OAkVQ5N,oBAAS,GAlVjB,mBAkVvB6F,EAlVuB,KAkVVgI,EAlVU,KA4WxBC,EAA8B3C,kBAvBH,WAC/B,IAAM4C,EAA6B,eAC9BJ,GAEL,IAAK,IAAIK,KAAyBD,EAChCA,EAA8BC,GAAuBlO,MACnDR,EAAM2O,kBAAkBD,GAE1BD,EACEC,GACAnJ,MAAQnD,EACRqM,EAA8BC,GAAuBlO,MACrDiO,EAA8BC,GAAuBpJ,YAGzD,IAAIiB,GAAc,EAClB,IAAK,IAAIJ,KAAmBsI,EAC1BlI,EACEkI,EAA8BtI,GAAiBZ,OAASgB,EAE5D+H,EAAgBG,GAChBF,EAAehI,MAGXqI,EAAuB/C,iBAAO7L,EAAM2O,mBAE1C3C,qBAAU,WACJ4C,EAAqB3C,SACvBuC,EAA4BvC,YAE7B,IAGH,IA4DMtG,EAAoB,GAC1B,IAAK,IAAI1D,KAAOoM,EACd1I,EAAkBlF,KAAK,CACrBmF,GAAI3D,EACJ4D,OAAQwI,EAAapM,KAKzB,IAAM4M,EAAgBlJ,EAAkBmH,MAAM,EAAG,GAC3CgC,EAAoBnJ,EAAkBmH,MAAM,EAAG,GAC/CiC,EAAqBpJ,EAAkBmH,MAAM,EAAG,IAehDkC,EAAW,SAAC5H,EAAO6H,EAAO7B,GAC9B,IAAM8B,EAbgB,SAAC3D,GACvB,IAAM4D,EAAgB,GACtB5D,EAAIzJ,KAAI,SAACC,GAAD,OAAQoN,EAAc1O,KAAKsB,EAAG8D,OAAON,UAE7C,IAAI2J,EAAiB,GAKrB,OAJAC,EAAcC,SACZ,SAACrN,GAAD,OAASmN,EAAenN,IAAOmN,EAAenN,IAAO,GAAK,KAGrDmN,EAIgBG,CAAgBJ,GACjCK,EAAQxE,OAAOC,OAAOmE,GAAgBK,QAC1C,SAACC,EAAKC,GAAN,OAAeD,EAAMC,KAEjBC,EAAWR,EAAeS,KAAOT,EAAeS,KAAO,EAE7D,OACE,oCACE,yBAAK1P,UAAU,YACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,QAAQ2P,MAAO,CAAEC,gBAAiBzC,KACjD,6BAAMhG,IAER,6BACGsI,EADH,MACgBJ,IAGlB,2BAAOrP,UAAU,aACf,+BACGgP,EAAMnN,KAAI,SAACC,EAAIC,GACd,OACE,wBAAIC,IAAKD,GACP,wBAAI/B,UAAU,WACZ,kBAAC,EAAD,CAAQsF,MAAOxD,EAAG8D,OAAON,MAAO6H,MAAOA,KAEzC,wBAAInN,UAAU,YAAY8B,EAAG8D,OAAOzE,cAAcK,MAAlD,KACA,wBAAIxB,UAAU,WACZ,kBAAC,EAAD,CACEgC,IAAKF,EAAG6D,GACR3E,YAAac,EAAG8D,OAAO5E,YACvBG,cAAeW,EAAG8D,OAAOzE,cACzBZ,MAAOuB,EAAG8D,OAAOrF,MACjB0F,eAAgBnE,EAAG8D,OAAOP,WAC1BtE,SAAUe,EAAG8D,OAAON,MACpBxE,QAASgB,EAAG8D,OAAO9E,QACnByE,QAASzD,EAAG8D,OAAOL,QACnB/D,MAAOM,EAAG8D,OAAOzE,cAAcK,MAC/BF,YAAaQ,EAAG8D,OAAOzE,cAAcG,YACrCD,QAAS,SAAC0E,GAAD,OA7HD,SAACA,EAAGG,GAC9B,IAAM2J,EAAmB,eACpBzB,GAEChI,EAAkB,eAAQyJ,EAAoB3J,IACpDE,EAAmB7F,MAAQwF,EAAEM,OAAO9F,MAEpC6F,EAAmBd,MAAQnD,EACzBiE,EAAmB7F,MACnB6F,EAAmBf,YAGrBe,EAAmBb,SAAU,EAC7BsK,EAAoB3J,GAAmBE,EAEvC,IAAIE,GAAc,EAClB,IAAK,IAAIJ,KAAmB2J,EAC1BvJ,EAAcuJ,EAAoB3J,GAAiBZ,OAASgB,EAE9D+H,EAAgBwB,GAChBvB,EAAehI,GAyGmBC,CAAoBR,EAAGjE,EAAG6D,gBAY1DE,EACF,0BAAM7F,UAAU,OAAOiB,aAAa,MAAM6E,SAnH3B,SAACC,GAChBA,EAAEC,iBAEF,IAAM8J,EAAW,GACjB,IAAK,IAAIrB,KAAyBL,EAChC0B,EAASrB,GACPL,EAAaK,GAAuBlO,MAGxC,CACE,mBACA,oBACA,mBACA,oBACA,eACA,gBACA,WACA,cACA,gBACA,SACA,sBACA,wBACA4O,SAAQ,SAACY,GAAD,MACe,kBAAhBD,EAASC,GACXD,EAASC,GAAKhN,SAAS+M,EAASC,GAAG/M,QAAQ,IAAK,KACjD,QAGN,IAAMqJ,EAAO,CACX5B,aAAcqF,EACd3L,OAAQpE,EAAMoE,QAGhBpE,EAAM+F,SAASuG,EAAMtM,EAAM0L,MAAO1L,EAAM4F,MAmFtC,yBAAK3F,UAAU,yBACZ+O,EAAS,YAAaH,EAAe,WACrCG,EAAS,8BAA+BF,EAAmB,WAC3DE,EAAS,iBAAkBD,EAAoB,WAChD,kBAAC,EAAD,CAAQ5M,UAAWoE,GAAnB,UASN,OAJIvG,EAAM0E,YACRoB,EAAO,kBAAC,EAAD,OAGF,yBAAK7F,UAAU,gBAAgB6F,MCrfzBtB,eAbS,SAACC,GACvB,MAAO,CACLwL,oBAAqBxL,EAAMgH,UAAUwE,wBAId,SAAClL,GAC1B,MAAO,CACLmL,YAAa,SAACxF,EAAcgB,GAAf,OACX3G,EHDqB,SAAC2F,EAAcgB,GACxC,MAAO,CACLxJ,KbdwB,eaexBwI,eACAgB,SGHWvG,CAAoBuF,EAAcgB,QAIlClH,EA3BQ,SAACxE,GAMtB,OACE,yBAAKC,UAAU,kBACZD,EAAMiQ,oBAAsB,kBAAC,IAAD,CAAUxJ,GAAG,MAAS,KACnD,kBAAC,EAAD,CAAcV,SAPD,SAAC2E,EAAcgB,GAC9B1L,EAAMkQ,YAAYxF,EAAcgB,UC4BrBlH,G,MAAAA,aAfS,SAACC,GACvB,MAAO,CACL0L,mBAAoB1L,EAAMgH,UAAU0E,mBACpCzE,MAAOjH,EAAME,KAAKR,QAClBiM,qBAAsB3L,EAAMgH,UAAU2E,yBAIf,SAACrL,GAC1B,MAAO,CACLsL,aAAc,SAAC3F,EAAcgB,EAAO9F,GAAtB,OACZb,EJ4FsB,SAAC2F,EAAcgB,EAAO9F,GAChD,MAAO,CACL1D,KbzFyB,gBa0FzBwI,eACAgB,QACA9F,MIjGWT,CAAqBuF,EAAcgB,EAAO9F,QAI1CpB,EA/BM,SAACxE,GACpB,IACM4F,EADQ0K,cACGC,OAAO3K,GAMxB,OACE,yBAAK3F,UAAU,gBACZD,EAAMoQ,qBAAuB,kBAAC,IAAD,CAAU3J,GAAG,MAAS,KACpD,kBAAC,EAAD,CAAckI,kBAAmB3O,EAAMmQ,mBAAmBzF,aAAc9E,GAAIA,EAAIG,SAPnE,SAAC2E,EAAcgB,EAAO9F,GACrC5F,EAAMqQ,aAAa3F,EAAcgB,EAAO9F,WCM7B4K,G,YAdD,SAACxQ,GACb,OAAOA,EAAMyQ,KACTC,IAASC,aACP,yBAAKxN,QAASnD,EAAM4Q,UAAW3Q,UAAU,SACvC,yBAAKkD,QAAS,SAAC6C,GAAD,OAAOA,EAAE6C,mBAAmB5I,UAAU,eAClD,yBAAKA,UAAU,WAAWD,EAAMqI,SAChC,yBAAKpI,UAAU,WAAWD,EAAMmF,WAGpC0L,SAASC,cAAc,WAEzB,OCDSC,G,MAXE,SAAC/Q,GAChB,OACE,wBAAIC,UAAU,MACZ,wBAAIA,UAAU,kBACZ,2BAAID,EAAMyB,QAEZ,wBAAIxB,UAAU,mBAAmBD,EAAMsM,SCO9B0E,G,MAbD,SAAChR,GACb,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,uBAAuBD,EAAMoH,OAC5C,2BAAOnH,UAAU,qBACf,+BACGD,EAAME,cCwCF+Q,G,MA9Ca,SAACjR,GAC3B,IAGMkR,EAAgBC,IAAuB5E,KAAK6E,GAC5CC,EACJH,GACElR,EAAMsR,QAAU,EAAItR,EAAMsR,QAAU,GAAK,IAAOJ,EAEpD,OACE,yBAAK3N,OAAQ8J,IAAY/J,MAAO+J,KAC9B,4BACEC,OAAQtN,EAAMuR,SACd9N,KAAK,cACL+N,YAZS,EAaT3N,EAZmBwJ,GAanB1J,GAfS,GAgBTC,GAhBS,KAkBX,4BACE0J,OAAQtN,EAAMyR,SACdhO,KAAK,cACLiO,gBAAe,UAAKR,EAAL,YAAsBA,GACrCG,iBAAkBA,EAClBG,YAtBS,EAuBTG,cAAc,QACd9N,EAvBmBwJ,GAwBnB1J,GA1BS,GA2BTC,GA3BS,GA4BTgO,UAAS,qBA5BA,GA4BA,YA5BA,GA4BA,OAEX,0BACE3R,UAAU,iBACV4R,EAAE,MACFC,EAAE,MACFC,iBAAiB,SACjBC,WAAW,SACXvO,KAAK,UACLwO,QAAS,IAERjS,EAAMsR,QAAU,EAAhB,UAAuBtR,EAAMsR,QAAQnI,QAAQ,GAA7C,gBCoXM3E,eAjBS,SAACC,GACvB,MAAO,CACL0L,mBAAoB1L,EAAMgH,UAAU0E,mBACpCzE,MAAOjH,EAAME,KAAKR,QAClBO,UAAWD,EAAMgH,UAAU7G,QAC3BsN,sBAAuBzN,EAAMgH,UAAUyG,0BAIhB,SAACnN,GAC1B,MAAO,CACLoN,iBAAkB,SAACzG,EAAO9F,GAAR,OAChBb,ETjU0B,SAAC2G,EAAO9F,GACtC,MAAO,CACL1D,Kb5D8B,qBa6D9BwJ,QACA9F,MS6TWT,CAAyBuG,EAAO9F,KAC3CwM,eAAgB,SAAC1G,EAAO9F,GAAR,OAAeb,ETxPL,SAAC2G,EAAO9F,GACpC,MAAO,CACL1D,KbtH2B,kBauH3BwJ,QACA9F,MSoPwCT,CAAuBuG,EAAO9F,QAI3DpB,EApZM,SAACxE,GACpBoF,QAAQC,IAAIrF,GADkB,MAGIU,oBAAS,GAHb,mBAGvB2R,EAHuB,KAGZC,EAHY,KASxBC,EAAa,WACjBD,GAAa,IAITE,EAAQlC,cACRmC,EAAsB5G,iBAAO7L,EAAMmS,kBACnCrG,EAAWD,iBAAO7L,EAAM0L,OACxBgH,EAAQ7G,iBAAO2G,EAAMjC,OAAO3K,IAElCoG,qBAAU,WACRyG,EAAoBxG,QAAQH,EAASG,QAASyG,EAAMzG,WACnD,IArB2B,IAgD1B0G,EACFC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EA/D4B,EA8C1B1T,EAAMmQ,mBAAmBzF,cAAgB,GArB3CC,EAzB4B,EAyB5BA,YACAoC,EA1B4B,EA0B5BA,QACAS,EA3B4B,EA2B5BA,UACAC,EA5B4B,EA4B5BA,QACA1E,EA7B4B,EA6B5BA,MACA9D,EA9B4B,EA8B5BA,MACA+D,EA/B4B,EA+B5BA,KACAC,EAhC4B,EAgC5BA,SACAyE,EAjC4B,EAiC5BA,UACAxE,EAlC4B,EAkC5BA,iBACAE,EAnC4B,EAmC5BA,kBACAuE,EApC4B,EAoC5BA,iBACAC,EArC4B,EAqC5BA,kBACAC,EAtC4B,EAsC5BA,aACAC,EAvC4B,EAuC5BA,cACAC,EAxC4B,EAwC5BA,SACAC,EAzC4B,EAyC5BA,YACAC,GA1C4B,EA0C5BA,cACAC,GA3C4B,EA2C5BA,OACAC,GA5C4B,EA4C5BA,oBACAC,GA7C4B,EA6C5BA,qBAmBEpO,EAAMmQ,qBAOR8C,EAAa/E,GAASC,GAAsBC,GAC5C8E,EAAejF,GAAgBG,GAC/B+E,EAAMlF,GAAgBG,GACtBgF,EAA2BlK,EAAmB8E,EAC9CqF,EAA2BnK,GAL3B8J,EAAchF,EAAcC,IAM5BqF,GAAqBnF,GAAsBC,IAAwBF,GACnEqF,GAZAZ,EAAOzJ,EAAmBE,GAYLF,EAAoB,IACzCsK,GATAT,GADAD,EAAoBH,GAFpBC,EAAYjF,EAAmBC,IAC/BiF,EAAchF,EAAeC,IAEGC,GASJ7E,EAAoB,IAChDuK,EACGV,EAAYC,EAAe,IAAM,EAAlC,WACSD,EAAYC,EAAe,KAAK7J,QAAQ,GADjD,YAGFuK,EACGX,EAAY7E,GAAU,IAAM,EAA7B,WACS6E,EAAY7E,GAAU,KAAK/E,QAAQ,GAD5C,aAMJ,IAAIwK,GAAyB,KACzB3T,EAAMmQ,qBACRwD,GACE,yBAAK1T,UAAU,yBACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,aACb,6BAAM0K,GACN,yBAAK1K,UAAU,wBACb,kBAAC,IAAD,CAAMwG,GAAE,gBAAWiM,EAAMzG,SAAWhM,UAAU,UAA9C,QAGA,4BAAQA,UAAU,gBAAgBkD,QAhG5B,WAChBmP,GAAa,KA+FH,YAMJ,yBAAKrS,UAAU,qBACb,kBAAC,EAAD,CAAOmH,MAAM,aACX,kBAAC,EAAD,CAAU3F,MAAM,WAAW6K,KAAMS,IACjC,kBAAC,EAAD,CAAUtL,MAAM,eAAe6K,KAAMkB,IACrC,kBAAC,EAAD,CAAU/L,MAAM,WAAW6K,KAAMmB,IACjC,kBAAC,EAAD,CAAUhM,MAAM,SAAS6K,KAAMvD,IAC/B,kBAAC,EAAD,CAAUtH,MAAM,SAAS6K,KAAMrH,KAGjC,kBAAC,EAAD,CAAOmC,MAAM,+BACX,kBAAC,EAAD,CAAU3F,MAAM,YAAY6K,KAAMrD,IAClC,kBAAC,EAAD,CAAUxH,MAAM,cAAc6K,KAAMtD,IACpC,kBAAC,EAAD,CAAUvH,MAAM,aAAa6K,KAAMoB,MAIvC,yBAAKzN,UAAU,yBACb,yBAAKA,UAAU,uBAAf,WACA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,iDADF,IAC8B,mDAE9B,2BAAOA,UAAU,gBACf,2BAAOA,UAAU,4BACf,kBAAC,EAAD,CACEwB,MAAM,oBACN6K,KACEpD,EAAiB0K,kBAAoB1K,IAGzC,kBAAC,EAAD,CACEzH,MAAM,qBACN6K,KAAI,WACFlD,EAAkBwK,kBAAoBxK,KAG1C,kBAAC,EAAD,CACE3H,MAAM,wBACN6K,KAAMqG,EAAKiB,mBAEb,kBAAC,EAAD,CACEnS,MAAM,oBACN6K,KACEqB,EAAiBiG,kBAAoBjG,IAGzC,kBAAC,EAAD,CACElM,MAAM,qBACN6K,KAAI,WACFsB,EAAkBgG,kBAAoBhG,KAG1C,kBAAC,EAAD,CACEnM,MAAM,gBACN6K,KAAMsG,EAAUgB,mBAElB,kBAAC,EAAD,CACEnS,MAAM,0BACN6K,KAAMuB,EAAa+F,kBAAoB/F,IAEzC,kBAAC,EAAD,CACEpM,MAAM,2BACN6K,KAAI,WACFwB,EAAc8F,kBAAoB9F,KAGtC,kBAAC,EAAD,CACErM,MAAM,sBACN6K,KAAMuG,EAAYe,mBAEpB,kBAAC,EAAD,CACEnS,MAAM,qBACN6K,KAAMwG,EAAkBc,mBAE1B,kBAAC,EAAD,CACEnS,MAAM,WACN6K,KAAI,WAAMyB,EAAS6F,kBAAoB7F,KAEzC,kBAAC,EAAD,CACEtM,MAAM,+BACN6K,KAAMyG,EAAUa,sBAMxB,yBAAK3T,UAAU,iBACb,yBAAKA,UAAU,gBACb,8CADF,IAC2B,mDAE3B,2BAAOA,UAAU,gBACf,2BAAOA,UAAU,6BACf,kBAAC,EAAD,CACEwB,MAAM,eACN6K,KAAM0B,EAAY4F,kBAAoB5F,IAExC,kBAAC,EAAD,CACEvM,MAAM,iBACN6K,KAAM2B,GAAc2F,kBAAoB3F,KAE1C,kBAAC,EAAD,CACExM,MAAM,eACN6K,KAAM0G,EAAYY,mBAEpB,kBAAC,EAAD,CACEnS,MAAM,SACN6K,KAAM4B,GAAO0F,kBAAoB1F,KAEnC,kBAAC,EAAD,CACEzM,MAAM,wBACN6K,KACE6B,GAAoByF,kBACpBzF,KAGJ,kBAAC,EAAD,CACE1M,MAAM,yBACN6K,KACE8B,GAAqBwF,kBACrBxF,KAGJ,kBAAC,EAAD,CACE3M,MAAM,kCACN6K,KAAM2G,EAAWW,uBAO3B,yBAAK3T,UAAU,UACb,yBAAKA,UAAU,gBAAf,UACA,yBAAKA,UAAU,eACb,2BAAOA,UAAU,gBACf,2BAAOA,UAAU,2BACf,kBAAC,EAAD,CAAUwB,MAAM,aAChB,kBAAC,EAAD,CACEA,MAAM,gBACN6K,KAAM4G,EAAa/J,QAAQ,KAE7B,kBAAC,EAAD,CACE1H,MAAM,8BACN6K,KAAM6G,EAAIS,mBAGZ,kBAAC,EAAD,CAAUnS,MAAM,aAChB,kBAAC,EAAD,CACEA,MAAM,6BACN6K,KAAM8G,EAAyBjK,QAAQ,KAEzC,kBAAC,EAAD,CACE1H,MAAM,6BACN6K,KAAM+G,EAAyBlK,QAAQ,OAK7C,2BAAOlJ,UAAU,gBACf,2BAAOA,UAAU,4BACf,kBAAC,EAAD,CAAUwB,MAAM,aAChB,kBAAC,EAAD,CACEA,MAAM,oBACN6K,KAAMgH,EAAkBnK,QAAQ,KAGlC,kBAAC,EAAD,CAAU1H,MAAM,kBAChB,kBAAC,EAAD,CACEA,MAAM,cACN6K,KACEiH,EAAa,EAAb,UAAoBA,EAAWpK,QAAQ,GAAvC,cAGJ,kBAAC,EAAD,CACE1H,MAAM,gBACN6K,KACEkH,EAAe,EAAf,UACOA,EAAarK,QAAQ,GAD5B,cAKJ,kBAAC,EAAD,CAAU1H,MAAM,0BAA0B6K,KAAMmH,IAChD,kBAAC,EAAD,CAAUhS,MAAM,0BAA0B6K,KAAMoH,UAQ5D,yBAAKzT,UAAU,+BACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,sBACb,0BAAMA,UAAU,YAAhB,OACA,wCAAUiJ,EAAmB,KAAMC,QAAQ,GAA3C,UAEF,yBAAKlJ,UAAU,uBAAf,aAEF,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,sBACb,6BACE,kBAAC,EAAD,CACEqR,QAASiC,EACThC,SAAS,YACTE,SAAS,cAIf,yBAAKxR,UAAU,uBAAf,gBAEF,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,sBACb,6BACE,kBAAC,EAAD,CACEqR,QAASkC,EACTjC,SAAS,YACTE,SAAS,cAIf,yBAAKxR,UAAU,uBAAf,kBAEF,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,sBACb,6BAAMqT,EAAkBnK,QAAQ,KAElC,yBAAKlJ,UAAU,uBAAf,yBAQV,IAAIoI,GAAU,8CACVrI,EAAMmQ,qBACR9H,GAAO,oDAAgDrI,EAAMmQ,mBAAmBzF,aAAaC,YAAtF,OAGL3K,EAAM0E,YACRiP,GAAyB,kBAAC,EAAD,MACzBtL,GAAU,kBAAC,EAAD,OAGZ,IAAIlD,GACF,kBAAC,IAAM0O,SAAP,KACE,4BACE1Q,QAAS,kBAAMnD,EAAMoS,eAAetG,EAASG,QAASyG,EAAMzG,UAC5DhM,UAAU,iBAFZ,UAMA,4BAAQA,UAAU,SAASkD,QAASoP,GAApC,WAMJ,OACE,yBAAKtS,UAAU,gBACZD,EAAMmQ,mBAAqBwD,GAAyB,KACpD3T,EAAMkS,sBACL,kBAAC,IAAD,CACEzL,GAAI,CACF0B,SAAU,IACV1D,MAAO,CAAEqP,KAAM9T,EAAM6H,aAGvB,KACJ,kBAAC,EAAD,CACE4I,KAAM4B,EACNhK,QAASA,GACTlD,QAASA,GACTyL,UAAW2B,QCzWJ/N,G,MAAAA,aAZS,SAACC,GACvB,MAAO,CACLK,gBAAwC,OAAvBL,EAAME,KAAKR,YAIL,SAACY,GAC1B,MAAO,CACLgP,SAAU,kBAAMhP,ExBcX,CACL7C,KClCgC,6BuBuBrBsC,EAzBA,SAACxE,GAKd,OACE,yBAAKC,UAAU,UACb,kBAAC,EAAD,CAAQmD,QANW,WACrBpD,EAAM+T,aAKJ,UACE/T,EAAM8E,gBAA4C,KAA1B,kBAAC,IAAD,CAAU2B,GAAG,e,iBCiC9BjC,G,MAAAA,aAZS,SAACC,GACvB,MAAO,CACLuP,qBAAsBvP,EAAMqC,MAAMyD,gBAIX,SAACxF,GAC1B,MAAO,CACLkP,SAAU,SAAC1M,GAAD,OAAWxC,ElBzCE,SAACwC,GAC1B,MAAO,CACLrF,KN+CwB,eM9CxBqF,SkBsC8BpC,CAAoBoC,QAIvC/C,EAvCA,SAACxE,GAAW,IAAD,EACcU,mBAASV,EAAMgU,sBAD7B,mBACjBE,EADiB,KACJC,EADI,KAGlBC,EAASvI,iBAAOwI,IAAEC,UAAS,SAACtO,GAAD,OAAOhG,EAAMiU,SAASjO,KAAI,MAAMiG,QAWjE,OAJAD,qBAAU,WACRmI,EAAenU,EAAMgU,wBACpB,CAAChU,EAAMgU,uBAGR,yBAAK/T,UAAU,aACb,kBAAC,EAAD,CAAMgE,KAAK,WACX,kBAAC,EAAD,CACE/B,KAAK,OACLX,YAAY,mBACZf,MAAO0T,EACP5S,QAAS,SAAC0E,GAAD,OAhBY,SAACA,GAC1BoO,EAAOpO,EAAEM,OAAO9F,OAChB2T,EAAenO,EAAEM,OAAO9F,OAcJ+T,CAAmBvO,WCS5BwO,EAhCA,SAACxU,GACd,IAAM6H,EAAWC,cAEbV,EAAQ,GACZ,OAAQS,EAASM,UACf,IAAK,IACHf,EAAQ,yBACR,MACF,IAAK,OACHA,EAAQ,mBACR,MACF,IAAK,iBACHA,EAAQ,gBACR,MACF,QACEA,EAAQ,uBAGZ,OACE,yBAAKnH,UAAU,UACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,OAEqB,MAAtB4H,EAASM,SAAmB,kBAAC,EAAD,MAAa,KAC1C,yBAAKlI,UAAU,wBACb,uBAAGA,UAAU,aAAakD,QAASnD,EAAMyU,iBACzC,4BAAKrN,MC2TEsN,G,MAvVO,SAAC1U,GACrB,OACE,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,SACb,2DACA,sIAIA,0JAIA,+DACA,4BACE,uZAQA,+XAQA,4HAIA,gIAMJ,8DACA,kLAKA,2SAMA,iSAMA,uEACA,wOAKA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBAAf,oBACA,2BAAOA,UAAU,gBACf,2BAAOA,UAAU,gBACf,kBAAC,EAAD,CAAUwB,MAAM,oBAAoB6K,KAAM,aAC1C,kBAAC,EAAD,CAAU7K,MAAM,qBAAqB6K,KAAM,aAC3C,kBAAC,EAAD,CAAU7K,MAAM,oBAAoB6K,KAAM,aAC1C,kBAAC,EAAD,CAAU7K,MAAM,qBAAqB6K,KAAM,aAC3C,kBAAC,EAAD,CACE7K,MAAM,0BACN6K,KAAM,mCAER,kBAAC,EAAD,CACE7K,MAAM,2BACN6K,KAAM,mCAER,kBAAC,EAAD,CACE7K,MAAM,WACN6K,KAAM,sCAMd,yBAAKrM,UAAU,iBACb,yBAAKA,UAAU,gBAAf,iBACA,2BAAOA,UAAU,gBACf,2BAAOA,UAAU,gBACf,kBAAC,EAAD,CAAUwB,MAAM,eAAe6K,KAAM,aACrC,kBAAC,EAAD,CAAU7K,MAAM,iBAAiB6K,KAAM,wBACvC,kBAAC,EAAD,CAAU7K,MAAM,SAAS6K,KAAM,aAC/B,kBAAC,EAAD,CAAU7K,MAAM,wBAAwB6K,KAAM,aAC9C,kBAAC,EAAD,CACE7K,MAAM,yBACN6K,KAAM,4BAOhB,2CACA,8KAIA,kDACA,2NAKA,4BACE,4BACE,uBACEqI,KAAK,wDACLrO,OAAO,SACPsO,IAAI,uBAHN,iBAOA,uBAAG3U,UAAU,YAAb,8WAQA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SADjB,yDAKF,4BACE,uBACE0U,KAAK,0DACLrO,OAAO,SACPsO,IAAI,uBAHN,+BAOA,uBAAG3U,UAAU,YAAb,moBAYA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SADjB,gDAMJ,iDACA,mMAKA,4BACE,4BACE,uBACE0U,KAAK,gEACLrO,OAAO,SACPsO,IAAI,uBAHN,+BAOA,uBAAG3U,UAAU,YAAb,+VAQA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SADjB,mEAKF,4BACE,uBACE0U,KAAK,yDACLrO,OAAO,SACPsO,IAAI,uBAHN,+BAOA,uBAAG3U,UAAU,YAAb,oXAQA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SADjB,oEAMJ,iDACA,kMAKA,4BACE,4BACE,uBACE0U,KAAK,2DACLrO,OAAO,SACPsO,IAAI,uBAHN,4BAOA,uBAAG3U,UAAU,YAAb,olBAWA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SADjB,2DAMJ,sDACA,4HAIA,4BACE,4BACE,uBACE0U,KAAK,wDACLrO,OAAO,SACPsO,IAAI,uBAHN,eAOA,uBAAG3U,UAAU,YAAb,+cASA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SADjB,4DAKF,4BACE,uBACE0U,KAAK,wDACLrO,OAAO,SACPsO,IAAI,uBAHN,iBAOA,uBAAG3U,UAAU,YAAb,yfAUA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SADjB,oEAKF,4BACE,uBACE0U,KAAK,0DACLrO,OAAO,SACPsO,IAAI,uBAHN,2BAOA,uBAAG3U,UAAU,YAAb,6UAOA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SADjB,oCAIF,4BACE,uBACE0U,KAAK,0DACLrO,OAAO,SACPsO,IAAI,uBAHN,2BAOA,uBAAG3U,UAAU,YAAb,uWAQA,yBAAKA,UAAU,WACb,yBAAKA,UAAU,SADjB,+CClUK4U,I,MAZE,SAAC7U,GAChB,OACE,yBACEC,UAAW8H,IAAW,WAAY,CAChC+M,aAAc9U,EAAMiI,KACpB8M,eAAgB/U,EAAMiI,OAExB9E,QAASnD,EAAMgV,yBCkCNC,GAjCF,WAAO,IAAD,EAC+BvU,oBAAS,GADxC,mBACVwU,EADU,KACQC,EADR,KAWjB,OACE,yBAAKlV,UAAU,QACb,kBAAC,IAAD,CAAemV,SAAUC,qBACvB,kBAAC,GAAD,CACEpN,KAAMiN,EACNF,qBAbqB,WAC3BG,GAAoB,MAchB,kBAAC,EAAD,CAASlN,KAAMiN,IACf,kBAAC,EAAD,CAAQT,eAZe,WAC3BU,GAAqBD,MAYjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,OAAOC,OAAK,EAACC,UAAWE,IACpC,kBAAC,IAAD,CAAOJ,KAAK,YAAYC,OAAK,EAACC,UAAWG,IACzC,kBAAC,IAAD,CAAOL,KAAK,YAAYC,OAAK,EAACC,UAAWI,IACzC,kBAAC,IAAD,CAAON,KAAK,iBAAiBC,OAAK,EAACC,UAAWd,IAC9C,kBAAC,IAAD,CAAUjO,GAAG,U,SClBRoP,GAlBM,SAAC,GAAD,IAAcC,EAAd,EAAGN,UAAsB1Q,EAAzB,EAAyBA,gBAAoBiR,EAA7C,uDACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAChW,GACP,OAAO8E,EACL,kBAACgR,EAAc9V,GAEf,kBAAC,IAAD,CACEyG,GAAI,CACF0B,SAAU,QACV1D,MAAO,CAAEqP,KAAM9T,EAAM6H,kBC+BlBrD,gBAZS,SAACC,GACvB,MAAO,CACLK,gBAAwC,OAAvBL,EAAME,KAAKR,YAIL,SAACY,GAC1B,MAAO,CACLkR,YAAa,kBAAMlR,E/BeZ,CACH7C,KCjDwB,yB8BqCjBsC,EAnCH,SAACxE,GACX,IAAMkW,EAAiBrK,iBAAO7L,EAAMiW,aAMpC,OAJAjK,qBAAU,WACRkK,EAAejK,YACd,IAGD,kBAAC,IAAD,CAAemJ,SAAUC,qBACvB,yBAAKpV,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqV,KAAK,QAAQC,OAAK,EAACC,UAAWW,IACrC,kBAAC,GAAD,CACErR,gBAAiB9E,EAAM8E,gBACvBwQ,KAAK,IACLE,UAAWP,WCZHmB,QACW,cAA7BC,OAAOxO,SAASyO,UAEe,UAA7BD,OAAOxO,SAASyO,UAEhBD,OAAOxO,SAASyO,SAAS9D,MACvB,2DChBN,IAAM+D,GAAe,CACnB3R,SAAS,EACTT,QAAS,KACTC,OAAQ,KACRS,MAAO,MAGH2R,GAAY,SAAC/R,EAAOgS,GACxB,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAMC,MAAO,QAGrC6R,GAAa,SAACjS,EAAOgS,GACzB,OAAO,2BACFhS,GADL,IAEEG,SAAS,EACTC,MAAO,KACPV,QAASsS,EAAOtS,QAChBC,OAAQqS,EAAOrS,UAIbuS,GAAW,SAAClS,EAAOgS,GACvB,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAOC,MAAO4R,EAAO5R,SAG7C+R,GAAa,SAACnS,EAAOgS,GACzB,OAAO,2BAAKhS,GAAZ,IAAmBN,QAAS,KAAMC,OAAQ,QAmB7ByS,GAfK,WAAmC,IAAlCpS,EAAiC,uDAAzB8R,GAAcE,EAAW,uCACpD,OAAQA,EAAOvU,MACb,IhCjCsB,agCkCpB,OAAOsU,GAAU/R,GACnB,IhClCwB,egCmCtB,OAAOiS,GAAWjS,EAAOgS,GAC3B,IhCnCqB,YgCoCnB,OAAOE,GAASlS,EAAOgS,GACzB,IhC9BuB,cgC+BrB,OAAOG,GAAWnS,GACpB,QACE,OAAOA,I,SCzCP8R,GAAe,CACnB3R,SAAS,EACTC,MAAO,KACPwF,aAAc,GACd4F,qBAAqB,EACrBG,sBAAsB,EACtB8B,uBAAuB,EACvB/B,mBAAoB,IAIhB2G,GAAmB,SAACrS,EAAOgS,GAC/B,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAMC,MAAO,QAGrCkS,GAAoB,SAACtS,EAAOgS,GAChC,IAAMO,EAAW,2BACZP,EAAO/L,cADK,IAEf9E,GAAI6Q,EAAOQ,aAGb,OAAO,2BACFxS,GADL,IAEEG,SAAS,EACTyF,aAAa,GAAD,oBAAM5F,EAAM4F,cAAZ,CAA0B2M,IACtC/G,qBAAqB,KAInBiH,GAAkB,SAACzS,EAAOgS,GAC9B,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAOC,MAAO4R,EAAO5R,SAG7CsS,GAAsB,SAAC1S,EAAOgS,GAClC,OAAO,2BAAKhS,GAAZ,IAAmBwL,qBAAqB,KAIpCmH,GAAsB,SAAC3S,EAAOgS,GAClC,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAMC,MAAO,QAGrCwS,GAAwB,SAAC5S,EAAOgS,GACpC,IAAIa,EAAMb,EAAOpM,aAAavI,KAAI,SAACC,GACjC,IAAMF,EAAG,2BAASE,GAAT,IAAa2I,aAAa,eAAM3I,EAAG2I,gBAiB5C,MAhBA,CACE,mBACA,oBACA,mBACA,oBACA,eACA,gBACA,WACA,cACA,gBACA,SACA,sBACA,wBACA0E,SAAQ,SAACY,GAAD,OACRnO,EAAI6I,aAAasF,GAAKhN,SAASnB,EAAI6I,aAAasF,OAE3CnO,KAGT,OAAO,2BACF4C,GADL,IAEEG,SAAS,EACTyF,aAAciN,KAIZC,GAAqB,SAAC9S,EAAOgS,GACjC,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAOC,MAAO4R,EAAO5R,SAI7C2S,GAAqB,SAAC/S,EAAOgS,GACjC,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAMC,MAAO,QAGrC4S,GAAuB,SAAChT,EAAOgS,GACnC,IAAIa,EAAG,2BAASb,EAAOtG,oBAAhB,IAAoCzF,aAAa,eAAM+L,EAAOtG,mBAAmBzF,gBAkBxF,MAjBA,CACE,mBACA,oBACA,mBACA,oBACA,eACA,gBACA,WACA,cACA,gBACA,SACA,sBACA,wBACA0E,SAAQ,SAACY,GAAD,OACRsH,EAAI5M,aAAasF,GAAKhN,SAASsU,EAAI5M,aAAasF,OAG3C,2BACFvL,GADL,IAEEG,SAAS,EACTuL,mBAAoBmH,KAIlBI,GAAoB,SAACjT,EAAOgS,GAChC,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAOC,MAAO4R,EAAO5R,SAI7C8S,GAAoB,SAAClT,EAAOgS,GAChC,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAMC,MAAO,QAGrC+S,GAAsB,SAACnT,EAAOgS,GAClC,IAAMoB,EAAc,2BACfpB,EAAO/L,cADQ,IAElB9E,GAAI6Q,EAAOQ,aAGb,OAAO,2BACFxS,GADL,IAEEG,SAAS,EACTyF,aAAc5F,EAAM4F,aAAavI,KAAI,SAACC,GAAD,OACnCA,EAAG6D,KAAO6Q,EAAOQ,WAAaY,EAAiB9V,KAEjDqO,sBAAsB,KAIpB0H,GAAmB,SAACrT,EAAOgS,GAC/B,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAOC,MAAO4R,EAAO5R,SAG7CkT,GAAuB,SAACtT,EAAOgS,GACnC,OAAO,2BAAKhS,GAAZ,IAAmB2L,sBAAsB,KAIrC4H,GAAsB,SAACvT,EAAOgS,GAClC,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAMC,MAAO,QAGrCoT,GAAwB,SAACxT,EAAOgS,GACpC,OAAO,2BACFhS,GADL,IAEEG,SAAS,EACTyF,aAAc5F,EAAM4F,aAAaI,QAC/B,SAAC1I,GAAD,OAAQA,EAAG6D,KAAO6Q,EAAOQ,cAE3B/E,uBAAuB,KAIrBgG,GAAqB,SAACzT,EAAOgS,GACjC,OAAO,2BAAKhS,GAAZ,IAAmBG,SAAS,EAAOC,MAAO4R,EAAO5R,SAG7CsT,GAAyB,SAAC1T,EAAOgS,GACrC,OAAO,2BAAKhS,GAAZ,IAAmByN,uBAAuB,KA+C7BkG,GA3CS,WAAmC,IAAlC3T,EAAiC,uDAAzB8R,GAAcE,EAAW,uCACxD,OAAQA,EAAOvU,MACb,IjC3J8B,qBiC4J5B,OAAO4U,GAAiBrS,GAC1B,IjC5JgC,uBiC6J9B,OAAOsS,GAAkBtS,EAAOgS,GAClC,IjC7J6B,oBiC8J3B,OAAOS,GAAgBzS,EAAOgS,GAChC,IjC9JiC,wBiC+J/B,OAAOU,GAAoB1S,GAC7B,IjC3JiC,wBiC4J/B,OAAO2S,GAAoB3S,GAC7B,IjC5JmC,0BiC6JjC,OAAO4S,GAAsB5S,EAAOgS,GACtC,IjC7JgC,uBiC8J9B,OAAOc,GAAmB9S,EAAOgS,GACnC,IjC1JgC,uBiC2J9B,OAAOe,GAAmB/S,GAC5B,IjC3JkC,yBiC4JhC,OAAOgT,GAAqBhT,EAAOgS,GACrC,IjC5J+B,sBiC6J7B,OAAOiB,GAAkBjT,EAAOgS,GAClC,IjCzJ+B,sBiC0J7B,OAAOkB,GAAkBlT,GAC3B,IjC1JiC,wBiC2J/B,OAAOmT,GAAoBnT,EAAOgS,GACpC,IjC3J8B,qBiC4J5B,OAAOqB,GAAiBrT,EAAOgS,GACjC,IjC5JkC,yBiC6JhC,OAAOsB,GAAqBtT,GAC9B,IjCzJiC,wBiC0J/B,OAAOuT,GAAoBvT,GAC7B,IjC1JmC,0BiC2JjC,OAAOwT,GAAsBxT,EAAOgS,GACtC,IjC3JgC,uBiC4J9B,OAAOyB,GAAmBzT,EAAOgS,GACnC,IjC5JoC,2BiC6JlC,OAAO0B,GAAuB1T,GAChC,QACE,OAAOA,I,SC3MP8R,GAAe,CACnBhM,YAAa,GACb7C,UAAW,GACXX,eAAgB,CACdsR,OAAO,EACPC,OAAO,EACPC,QAAQ,EACRC,OAAO,GAETvR,eAAgB,CACdwR,WAAW,EACXC,SAAS,EACTC,QAAQ,EACRC,IAAI,EACJC,YAAY,EACZC,OAAO,IAKLvO,GAAc,SAAC9F,EAAOgS,GAC1B,OAAO,2BAAKhS,GAAZ,IAAmB8F,YAAakM,EAAOlP,SAInCG,GAAY,SAACjD,EAAOgS,GACxB,OAAO,2BAAKhS,GAAZ,IAAmBiD,UAAW+O,EAAOlP,SAIjCR,GAAiB,SAACtC,EAAOgS,GAC7B,OAAO,2BACFhS,GADL,IAEEsC,eAAe,2BACVtC,EAAMsC,gBADG,mBAEX0P,EAAOlP,OAAS9C,EAAMsC,eAAe0P,EAAOlP,YAK7CN,GAAiB,SAACxC,EAAOgS,GAC7B,OAAO,2BACFhS,GADL,IAEEwC,eAAe,2BACVxC,EAAMwC,gBADG,mBAEXwP,EAAOlP,OAAS9C,EAAMwC,eAAewP,EAAOlP,YAK7CwR,GAAkB,SAACtU,EAAOgS,GAC9B,OAAO,eACFF,KAqBQyC,GAjBM,WAAmC,IAAlCvU,EAAiC,uDAAzB8R,GAAcE,EAAW,uCACrD,OAAQA,EAAOvU,MACb,IlCRwB,ekCStB,OAAOqI,GAAY9F,EAAOgS,GAC5B,IlCTsB,akCUpB,OAAO/O,GAAUjD,EAAOgS,GAC1B,IlCV4B,mBkCW1B,OAAO1P,GAAetC,EAAOgS,GAC/B,IlCX4B,mBkCY1B,OAAOxP,GAAexC,EAAOgS,GAC/B,IlCZ6B,oBkCa3B,OAAOsC,KACT,QACE,OAAOtU,I,oCCjEEwU,G,QAJEC,EAAMC,OAAO,CAC5BC,QAAS,mD,aCGMC,I,aAuCAC,I,aAMAC,I,aAQAC,IArDV,SAAUH,GAAa5C,GAAvB,4EAEL,OAFK,SAECgD,arCLC,CACLvX,KCHsB,eoCKnB,OAgBc,OAZboK,EAAO,CACXrH,MAAOwR,EAAOxR,MACdC,SAAUuR,EAAOvR,SACjBwU,mBAAmB,GAMnB,oHAbG,kBAgBoBC,cAAK,kBAAOT,GAAMU,KAHzC,oHAGmDtN,MAhBhD,OAmBoB,OAHjBuN,EAhBH,iBAmB0B,IAAIC,MAC/B,IAAIA,MAAOC,UAAsC,IAA1BF,EAASvN,KAAK0N,WApBpC,QAsBH,OAHMC,EAnBH,iBAsBGN,aAAK,CAACO,aAAc,WAAY,QAASL,EAASvN,KAAKnI,SAtB1D,QAuBH,OAvBG,UAuBGwV,aAAK,CAACO,aAAc,WAAY,iBAAkBD,GAvBrD,QAwBH,OAxBG,UAwBGN,aAAK,CAACO,aAAc,WAAY,SAAUL,EAASvN,KAAK6N,SAxB3D,QA2BH,OA3BG,UA2BGV,aACJtU,EAAoB0U,EAASvN,KAAKnI,QAAS0V,EAASvN,KAAK6N,UA5BxD,QA+BH,OA/BG,UA+BGV,aAAItU,EAAyB0U,EAASvN,KAAK0N,YA/B9C,gCAkCH,OAlCG,oCAkCGP,arCvBD,CACLvX,KCfqB,YDgBrB2C,MqCqB2B,KAAMgV,SAASvN,KAAKzH,QAlC5C,uDAuCA,SAAUyU,GAAqB7C,GAA/B,kEACL,OADK,SACC2D,aAA8B,IAAxB3D,EAAOnS,gBADd,OAEL,OAFK,SAECmV,arCLC,CACLvX,KClCgC,yBoCoC7B,wCAMA,SAAUqX,GAAW9C,GAArB,kEACL,OADK,SACCkD,aAAK,CAACO,aAAc,cAAe,SADpC,OAEL,OAFK,SAECP,aAAK,CAACO,aAAc,cAAe,kBAFpC,OAGL,OAHK,SAGCP,aAAK,CAACO,aAAc,cAAe,UAHpC,OAIL,OAJK,SAICT,arCPC,CACLvX,KCvCuB,gBoCyCpB,wCAQA,SAAUsX,GAAmB/C,GAA7B,4EACS,OADT,SACeyD,aAAaG,QAAQ,SADpC,UACC3O,EADD,uBAGH,OAHG,SAGG+N,arCpBD,CACLvX,KClCgC,yBoCkD7B,8BAKoB,OALpB,UAK0B,IAAI4X,KAC/BI,aAAaG,QAAQ,mBANpB,cAKGJ,EALH,SAQmB,IAAIH,MARvB,iBASD,OATC,UASKL,arC1BH,CACLvX,KClCgC,yBoCkD7B,gCAWc,OAXd,UAWoBgY,aAAaG,QAAQ,UAXzC,QAYD,OADMjW,EAXL,iBAYKqV,aAAItU,EAAoBuG,EAAOtH,IAZpC,QAaD,OAbC,UAaKqV,aACJtU,GACG8U,EAAeF,WAAY,IAAID,MAAOC,WAAa,MAfvD,yC,iBCrDUO,I,aAwBAC,I,aA8BAC,I,aA6BAC,I,aAwBAC,IA3GV,SAAUJ,GAAgB7D,GAA1B,wEAEL,OAFK,SAECgD,axBJC,CACLvX,KbQ8B,uBqCP3B,OAKc,OALd,kBAKoByX,cAAK,kBAC1BT,GAAMU,KAAN,+BAAmCnD,EAAO/K,OAAS+K,EAAO/L,iBANzD,YAKGmP,EALH,wBAWD,OAXC,SAWKJ,cxBRuB7T,EwBSAiU,EAASvN,KAAK3F,KxBTV+D,EwBSgB+L,EAAO/L,axBRrD,CACLxI,KbGgC,uBaFhC+U,WAAYrR,EACZ8E,kBwBPG,OAgBH,OAhBG,UAgBG+O,axBGD,CACLvX,KbViC,0BqCV9B,gCAmBH,OAnBG,oCAmBGuX,axBPD,CACLvX,KbJ6B,oBaK7B2C,MwBKkC,yBAnB/B,kCxBWwB,IARIe,EAAI8E,IwBHhC,kBAwBA,SAAU6P,GAAsB9D,GAAhC,4EAEL,OAFK,SAECgD,axBQC,CACLvX,KbpBiC,0BqCS9B,OAKc,OALd,kBAKoByX,cAAK,kBAC1BT,GAAMyB,IAAN,+BAC0BlE,EAAO/K,MADjC,sCACoE+K,EAAOrS,OAD3E,SANC,YAKGyV,EALH,yBAaD,IAAS5X,KADH2Y,EAAmB,GACTf,EAASvN,KACvBsO,EAAiBna,KAAjB,2BACKoZ,EAASvN,KAAKrK,IADnB,IAEE2D,GAAI3D,KAKR,OArBC,UAqBKwX,axBLH,CACLvX,KbzBmC,0Ba0BnCmI,awBG0CuQ,IArBvC,gCAyBH,OAzBG,oCAyBGnB,axBFD,CACLvX,Kb/BgC,uBagChC2C,MwBAqC,KAAMgV,SAASvN,KAAKzH,QAzBtD,uDA8BA,SAAU2V,GAAqB/D,GAA/B,4EAEL,OAFK,SAECgD,axBQC,CACLvX,Kb3CgC,yBqCgC7B,OAKc,OALd,kBAKoByX,cAAK,kBAC1BT,GAAMyB,IAAN,+BAC0BlE,EAAO/K,MADjC,oCACkE+K,EAAO7Q,GADzE,SANC,YAKGiU,EALH,yBAYD,IAAS5X,KADL4Y,EAAkB,GACNhB,EAASvN,KACvBuO,EAAe,2BACVhB,EAASvN,KAAKrK,IADJ,IAEb2D,GAAI3D,IAKR,OApBC,UAoBKwX,axBJH,CACLvX,KbhDkC,yBaiDlCiO,mBwBEyC0K,IApBtC,gCAwBH,OAxBG,oCAwBGpB,axBDD,CACLvX,KbtD+B,sBauD/B2C,MwBDoC,KAAMgV,SAASvN,KAAKzH,QAxBrD,uDA6BA,SAAU4V,GAAiBhE,GAA3B,wEAEL,OAFK,SAECgD,axBSC,CACLvX,KblE+B,wBqCsD5B,OAKc,OALd,kBAKoByX,cAAK,kBAC1BT,GAAM4B,MAAN,qBACgBrE,EAAO7Q,GADvB,uBACwC6Q,EAAO/K,OAC7C+K,EAAO/L,iBARR,YAKGmP,EALH,yBAaD,OAbC,SAaKJ,cxBGwB7T,EwBHQ6Q,EAAO7Q,GxBGX8E,EwBHemP,EAASvN,KxBIvD,CACLpK,KbvEiC,wBawEjC+U,WAAYrR,EACZ8E,kBwBpBG,OAeD,OAfC,UAeK+O,axBiBH,CACLvX,KbpFkC,2BqCmD/B,gCAmBH,OAnBG,oCAmBGuX,axBMD,CACLvX,Kb9E8B,qBa+E9B2C,MwBRmC,KAAMgV,SAASvN,KAAKzH,QAnBpD,kCxBwByB,IARIe,EAAI8E,IwBhBjC,kBAwBA,SAAUgQ,GAAmBjE,GAA7B,kEAEL,OAFK,SAECgD,axBuBC,CACLvX,KbhGiC,0BqCsE9B,OAKH,OALG,kBAKGyX,cAAK,kBACTT,GAAM6B,OAAN,qBAA2BtE,EAAO7Q,GAAlC,uBAAmD6Q,EAAO/K,WANzD,OAUH,OAVG,SAUG+N,axBqBD,CACLvX,KbrGmC,0BasGnC+U,WwBvBwCR,EAAO7Q,KAV5C,OAYH,OAZG,SAYG6T,axBiCD,CACLvX,KbjHoC,6BqCmEjC,+BAeH,OAfG,oCAeGuX,axBuBD,CACLvX,Kb3GgC,uBa4GhC2C,MwBzBqC,KAAMgV,SAASvN,KAAKzH,QAftD,uD,iBC/FUmW,I,aASAC,IATV,SAAUD,KAAV,kEACL,OADK,SACCE,aAAI,CACRC,atChBqB,YsCgBa9B,IAClC8B,atCf8B,qBsCea7B,IAC3C6B,atCbgC,uBsCaa5B,IAC7C4B,atChB4B,mBsCgBa3B,MALtC,wCASA,SAAUyB,KAAV,kEACL,OADK,SACCC,aAAI,CACRC,atCXwB,esCWab,IACrCa,atCL+B,sBsCKaZ,IAC5CY,atCC8B,qBsCDaX,IAC3CW,atCQyB,gBsCRaV,IACtCU,atCe2B,kBsCfaT,MANrC,wCCbP,IAAMU,GAGAC,IAEAC,GAAWC,YAAgB,CAC/B5W,KAAMkS,GACNpL,UAAW2M,GACXtR,MAAOkS,KAGHwC,GAAiBC,cAEjBC,GAAQC,YACZL,GACAF,GAAiBQ,YAAgBJ,MAGnCA,GAAeK,IAAIb,IACnBQ,GAAeK,IAAIZ,IAEnBvK,IAASsF,OACP,kBAAC,IAAD,CAAU0F,MAAOA,IACf,kBAAC,GAAD,OAEF7K,SAASiL,eAAe,SR4FpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAxX,GACLO,QAAQP,MAAMA,EAAM9D,a","file":"static/js/main.aa668c2e.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./ErrorMessage.scss\";\n\nconst ErrorMessage = (props) => {\n  return <div className=\"ErrorMessage\">{props.children}</div>;\n};\n\nexport default ErrorMessage;","import React, { useState } from \"react\";\nimport Cleave from \"cleave.js/react\";\n\nimport \"./Input.scss\";\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\n\nconst Input = (props) => {\n  let inputElement = null;\n  const inputClasses = [\"InputElement\"];\n\n  const labelClass = [\"Label\"];\n\n  const contentClass = [\"Content\"];\n  if (props.value) {\n    contentClass.push(\"SmallLetter\");\n  }\n\n  const [isFocusRemoved, setIsFocusRemoved] = useState(false);\n  const handleBlur = () => {\n    setIsFocusRemoved(true);\n  };\n\n  const renderError = (message) => {\n    if (props.invalid && isFocusRemoved) {\n      return <ErrorMessage>{message}</ErrorMessage>;\n    }\n  };\n\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <>\n        {renderError(props.message)}\n          <input\n            autoComplete=\"off\"\n            className={inputClasses.join(\" \")}\n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed}\n            placeholder={props.placeholder}\n            onBlur={handleBlur}\n          />\n          <label className={labelClass.join(\" \")}>\n            <span className={contentClass.join(\" \")}>{props.label}</span>\n          </label>\n        </>\n      );\n      break;\n    case \"inputFormated\":\n      inputElement = (\n        <>\n        {renderError(props.message)}\n          <Cleave\n            options={{\n              numeral: true,\n              numeralThousandsGroupStyle: \"thousand\",\n            }}\n            className={inputClasses.join(\" \")}\n            value={props.value}\n            onChange={props.changed}\n            onBlur={handleBlur}\n            placeholder={props.placeholder}\n          />\n          <label className={labelClass.join(\" \")}>\n            <span className={contentClass.join(\" \")}>{props.label}</span>\n          </label>\n        </>\n      );\n      break;\n    case \"checkbox\":\n      inputElement = (\n        <div className=\"BorderCheckbox\">\n          <label className=\"LabelCheckbox\">{props.label}</label>\n          {props.elementConfig.obj.map((el, idx) => (\n            <div key={idx} className=\"Checkbox-main\">\n              <label className=\"Container\">\n                {el.label}\n                <input\n                  type={el.type}\n                  onChange={props.changed}\n                  key={el.label}\n                  autoComplete=\"off\"\n                  value={el.label}\n                  placeholder={props.placeholder}\n                />\n                <span className=\"Checkmark\"></span>\n              </label>\n            </div>\n          ))}\n        </div>\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <>\n          <select\n            className=\"InputSelect\"\n            onChange={props.changed}\n            value={props.value}\n          >\n            <option value=\"\" disabled>\n              ---Select from dropdown---\n            </option>\n            {props.elementConfig.obj.map((el) => (\n              <option key={el} value={el}>\n                {el}\n              </option>\n            ))}\n          </select>\n          <label className={labelClass.join(\" \")}>\n            <span className={contentClass.join(\" \")}>{props.label}</span>\n          </label>\n        </>\n      );\n      break;\n    default:\n      inputElement = (\n        <>\n          <input\n            autoComplete=\"off\"\n            className={inputClasses.join(\" \")}\n            {...props.elementConfig}\n            value={props.value}\n            onChange={props.changed}\n            placeholder={props.placeholder}\n          />\n          <label className={labelClass.join(\" \")}>\n            <span className={contentClass.join(\" \")}>{props.label}</span>\n          </label>\n        </>\n      );\n  }\n\n  return <div className=\"Input\">{inputElement}</div>;\n};\n\nexport default Input;\n","export const checkValidity = (value, rules) => {\n  let isValid = true;\n  if (!rules) {\n    return true;\n  }\n\n  if (rules.required) {\n    isValid =\n      (typeof value !== \"number\" ? value.trim() !== \"\" : value) && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.length <= rules.maxLength && isValid;\n  }\n\n  if (rules.length) {\n    isValid = value.length === rules.length && isValid;\n  }\n\n  if (rules.isEmail) {\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isPhone) {\n    const pattern = /^(((\\+381)(\\s|-|\\/)?(([0-9]){2}){1})|((0){1}([1-9]){2}))(\\s|-|\\/)?(([0-9])\\d{6}|([0-9])\\d{5}){1}$/;\n    isValid = pattern.test(value) && isValid;\n  }\n\n  if (rules.isPositive) {\n    isValid =\n      (typeof value !== \"number\" ? parseInt(value.replace(\",\", \"\")) : value) >=\n        0 && isValid;\n  }\n\n  return isValid;\n};\n","import React from \"react\";\n\nimport \"./Button.scss\";\n\nconst Button = (props) => {\n  return (\n    <button\n      disabled={props.disabled}\n      onClick={props.clicked}\n      className=\"Button\"\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport \"./Logo.scss\";\n\nconst Logo = (props) => {\n  return (\n    <div className=\"Logo\">\n      <svg\n        width=\"120\"\n        height=\"45\"\n        viewBox=\"0 0 192 55\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle cx=\"60.5\" cy=\"14.5\" r=\"11.5\" fill=\"#FFA000\" />\n        <circle cx=\"60.5\" cy=\"40.5\" r=\"11.5\" fill=\"#F57C00\" />\n        <circle cx=\"11.5\" cy=\"28.5\" r=\"11.5\" fill=\"#FFCA28\" />\n        <circle cx=\"34.5\" cy=\"14.5\" r=\"11.5\" fill=\"#FFCA28\" />\n        <circle cx=\"34.5\" cy=\"40.5\" r=\"11.5\" fill=\"#FFA000\" />\n        <path\n          d=\"M93.5312 16.5859C93.3203 18.3906 92.6523 19.7852 91.5273 20.7695C90.4102 21.7461 88.9219 22.2344 87.0625 22.2344C85.0469 22.2344 83.4297 21.5117 82.2109 20.0664C81 18.6211 80.3945 16.6875 80.3945 14.2656V12.625C80.3945 11.0391 80.6758 9.64453 81.2383 8.44141C81.8086 7.23828 82.6133 6.31641 83.6523 5.67578C84.6914 5.02734 85.8945 4.70312 87.2617 4.70312C89.0742 4.70312 90.5273 5.21094 91.6211 6.22656C92.7148 7.23438 93.3516 8.63281 93.5312 10.4219H91.2695C91.0742 9.0625 90.6484 8.07812 89.9922 7.46875C89.3438 6.85938 88.4336 6.55469 87.2617 6.55469C85.8242 6.55469 84.6953 7.08594 83.875 8.14844C83.0625 9.21094 82.6562 10.7227 82.6562 12.6836V14.3359C82.6562 16.1875 83.043 17.6602 83.8164 18.7539C84.5898 19.8477 85.6719 20.3945 87.0625 20.3945C88.3125 20.3945 89.2695 20.1133 89.9336 19.5508C90.6055 18.9805 91.0508 17.9922 91.2695 16.5859H93.5312ZM104.102 20.7461C103.258 21.7383 102.02 22.2344 100.387 22.2344C99.0352 22.2344 98.0039 21.8438 97.293 21.0625C96.5898 20.2734 96.2344 19.1094 96.2266 17.5703V9.32031H98.3945V17.5117C98.3945 19.4336 99.1758 20.3945 100.738 20.3945C102.395 20.3945 103.496 19.7773 104.043 18.543V9.32031H106.211V22H104.148L104.102 20.7461ZM116.898 18.6367C116.898 18.0508 116.676 17.5977 116.23 17.2773C115.793 16.9492 115.023 16.668 113.922 16.4336C112.828 16.1992 111.957 15.918 111.309 15.5898C110.668 15.2617 110.191 14.8711 109.879 14.418C109.574 13.9648 109.422 13.4258 109.422 12.8008C109.422 11.7617 109.859 10.8828 110.734 10.1641C111.617 9.44531 112.742 9.08594 114.109 9.08594C115.547 9.08594 116.711 9.45703 117.602 10.1992C118.5 10.9414 118.949 11.8906 118.949 13.0469H116.77C116.77 12.4531 116.516 11.9414 116.008 11.5117C115.508 11.082 114.875 10.8672 114.109 10.8672C113.32 10.8672 112.703 11.0391 112.258 11.3828C111.812 11.7266 111.59 12.1758 111.59 12.7305C111.59 13.2539 111.797 13.6484 112.211 13.9141C112.625 14.1797 113.371 14.4336 114.449 14.6758C115.535 14.918 116.414 15.207 117.086 15.543C117.758 15.8789 118.254 16.2852 118.574 16.7617C118.902 17.2305 119.066 17.8047 119.066 18.4844C119.066 19.6172 118.613 20.5273 117.707 21.2148C116.801 21.8945 115.625 22.2344 114.18 22.2344C113.164 22.2344 112.266 22.0547 111.484 21.6953C110.703 21.3359 110.09 20.8359 109.645 20.1953C109.207 19.5469 108.988 18.8477 108.988 18.0977H111.156C111.195 18.8242 111.484 19.4023 112.023 19.832C112.57 20.2539 113.289 20.4648 114.18 20.4648C115 20.4648 115.656 20.3008 116.148 19.9727C116.648 19.6367 116.898 19.1914 116.898 18.6367ZM124.832 6.25V9.32031H127.199V10.9961H124.832V18.8594C124.832 19.3672 124.938 19.75 125.148 20.0078C125.359 20.2578 125.719 20.3828 126.227 20.3828C126.477 20.3828 126.82 20.3359 127.258 20.2422V22C126.688 22.1562 126.133 22.2344 125.594 22.2344C124.625 22.2344 123.895 21.9414 123.402 21.3555C122.91 20.7695 122.664 19.9375 122.664 18.8594V10.9961H120.355V9.32031H122.664V6.25H124.832ZM128.934 15.543C128.934 14.3008 129.176 13.1836 129.66 12.1914C130.152 11.1992 130.832 10.4336 131.699 9.89453C132.574 9.35547 133.57 9.08594 134.688 9.08594C136.414 9.08594 137.809 9.68359 138.871 10.8789C139.941 12.0742 140.477 13.6641 140.477 15.6484V15.8008C140.477 17.0352 140.238 18.1445 139.762 19.1289C139.293 20.1055 138.617 20.8672 137.734 21.4141C136.859 21.9609 135.852 22.2344 134.711 22.2344C132.992 22.2344 131.598 21.6367 130.527 20.4414C129.465 19.2461 128.934 17.6641 128.934 15.6953V15.543ZM131.113 15.8008C131.113 17.207 131.438 18.3359 132.086 19.1875C132.742 20.0391 133.617 20.4648 134.711 20.4648C135.812 20.4648 136.688 20.0352 137.336 19.1758C137.984 18.3086 138.309 17.0977 138.309 15.543C138.309 14.1523 137.977 13.0273 137.312 12.168C136.656 11.3008 135.781 10.8672 134.688 10.8672C133.617 10.8672 132.754 11.293 132.098 12.1445C131.441 12.9961 131.113 14.2148 131.113 15.8008ZM145.234 9.32031L145.293 10.7266C146.223 9.63281 147.477 9.08594 149.055 9.08594C150.828 9.08594 152.035 9.76562 152.676 11.125C153.098 10.5156 153.645 10.0234 154.316 9.64844C154.996 9.27344 155.797 9.08594 156.719 9.08594C159.5 9.08594 160.914 10.5586 160.961 13.5039V22H158.793V13.6328C158.793 12.7266 158.586 12.0508 158.172 11.6055C157.758 11.1523 157.062 10.9258 156.086 10.9258C155.281 10.9258 154.613 11.168 154.082 11.6523C153.551 12.1289 153.242 12.7734 153.156 13.5859V22H150.977V13.6914C150.977 11.8477 150.074 10.9258 148.27 10.9258C146.848 10.9258 145.875 11.5312 145.352 12.7422V22H143.184V9.32031H145.234ZM169.504 22.2344C167.785 22.2344 166.387 21.6719 165.309 20.5469C164.23 19.4141 163.691 17.9023 163.691 16.0117V15.6133C163.691 14.3555 163.93 13.2344 164.406 12.25C164.891 11.2578 165.562 10.4844 166.422 9.92969C167.289 9.36719 168.227 9.08594 169.234 9.08594C170.883 9.08594 172.164 9.62891 173.078 10.7148C173.992 11.8008 174.449 13.3555 174.449 15.3789V16.2812H165.859C165.891 17.5312 166.254 18.543 166.949 19.3164C167.652 20.082 168.543 20.4648 169.621 20.4648C170.387 20.4648 171.035 20.3086 171.566 19.9961C172.098 19.6836 172.562 19.2695 172.961 18.7539L174.285 19.7852C173.223 21.418 171.629 22.2344 169.504 22.2344ZM169.234 10.8672C168.359 10.8672 167.625 11.1875 167.031 11.8281C166.438 12.4609 166.07 13.3516 165.93 14.5H172.281V14.3359C172.219 13.2344 171.922 12.3828 171.391 11.7812C170.859 11.1719 170.141 10.8672 169.234 10.8672ZM183.098 11.2656C182.77 11.2109 182.414 11.1836 182.031 11.1836C180.609 11.1836 179.645 11.7891 179.137 13V22H176.969V9.32031H179.078L179.113 10.7852C179.824 9.65234 180.832 9.08594 182.137 9.08594C182.559 9.08594 182.879 9.14062 183.098 9.25V11.2656ZM83.8867 32.9375L89.4648 46.8594L95.043 32.9375H97.9609V50H95.7109V43.3555L95.9219 36.1836L90.3203 50H88.5977L83.0078 36.2188L83.2305 43.3555V50H80.9805V32.9375H83.8867ZM109.422 50C109.297 49.75 109.195 49.3047 109.117 48.6641C108.109 49.7109 106.906 50.2344 105.508 50.2344C104.258 50.2344 103.23 49.8828 102.426 49.1797C101.629 48.4688 101.23 47.5703 101.23 46.4844C101.23 45.1641 101.73 44.1406 102.73 43.4141C103.738 42.6797 105.152 42.3125 106.973 42.3125H109.082V41.3164C109.082 40.5586 108.855 39.957 108.402 39.5117C107.949 39.0586 107.281 38.832 106.398 38.832C105.625 38.832 104.977 39.0273 104.453 39.418C103.93 39.8086 103.668 40.2812 103.668 40.8359H101.488C101.488 40.2031 101.711 39.5938 102.156 39.0078C102.609 38.4141 103.219 37.9453 103.984 37.6016C104.758 37.2578 105.605 37.0859 106.527 37.0859C107.988 37.0859 109.133 37.4531 109.961 38.1875C110.789 38.9141 111.219 39.918 111.25 41.1992V47.0352C111.25 48.1992 111.398 49.125 111.695 49.8125V50H109.422ZM105.824 48.3477C106.504 48.3477 107.148 48.1719 107.758 47.8203C108.367 47.4688 108.809 47.0117 109.082 46.4492V43.8477H107.383C104.727 43.8477 103.398 44.625 103.398 46.1797C103.398 46.8594 103.625 47.3906 104.078 47.7734C104.531 48.1562 105.113 48.3477 105.824 48.3477ZM116.699 37.3203L116.77 38.9141C117.738 37.6953 119.004 37.0859 120.566 37.0859C123.246 37.0859 124.598 38.5977 124.621 41.6211V50H122.453V41.6094C122.445 40.6953 122.234 40.0195 121.82 39.582C121.414 39.1445 120.777 38.9258 119.91 38.9258C119.207 38.9258 118.59 39.1133 118.059 39.4883C117.527 39.8633 117.113 40.3555 116.816 40.9648V50H114.648V37.3203H116.699ZM135.719 50C135.594 49.75 135.492 49.3047 135.414 48.6641C134.406 49.7109 133.203 50.2344 131.805 50.2344C130.555 50.2344 129.527 49.8828 128.723 49.1797C127.926 48.4688 127.527 47.5703 127.527 46.4844C127.527 45.1641 128.027 44.1406 129.027 43.4141C130.035 42.6797 131.449 42.3125 133.27 42.3125H135.379V41.3164C135.379 40.5586 135.152 39.957 134.699 39.5117C134.246 39.0586 133.578 38.832 132.695 38.832C131.922 38.832 131.273 39.0273 130.75 39.418C130.227 39.8086 129.965 40.2812 129.965 40.8359H127.785C127.785 40.2031 128.008 39.5938 128.453 39.0078C128.906 38.4141 129.516 37.9453 130.281 37.6016C131.055 37.2578 131.902 37.0859 132.824 37.0859C134.285 37.0859 135.43 37.4531 136.258 38.1875C137.086 38.9141 137.516 39.918 137.547 41.1992V47.0352C137.547 48.1992 137.695 49.125 137.992 49.8125V50H135.719ZM132.121 48.3477C132.801 48.3477 133.445 48.1719 134.055 47.8203C134.664 47.4688 135.105 47.0117 135.379 46.4492V43.8477H133.68C131.023 43.8477 129.695 44.625 129.695 46.1797C129.695 46.8594 129.922 47.3906 130.375 47.7734C130.828 48.1562 131.41 48.3477 132.121 48.3477ZM140.43 43.5547C140.43 41.5781 140.887 40.0078 141.801 38.8438C142.715 37.6719 143.926 37.0859 145.434 37.0859C146.98 37.0859 148.188 37.6328 149.055 38.7266L149.16 37.3203H151.141V49.6953C151.141 51.3359 150.652 52.6289 149.676 53.5742C148.707 54.5195 147.402 54.9922 145.762 54.9922C144.848 54.9922 143.953 54.7969 143.078 54.4062C142.203 54.0156 141.535 53.4805 141.074 52.8008L142.199 51.5C143.129 52.6484 144.266 53.2227 145.609 53.2227C146.664 53.2227 147.484 52.9258 148.07 52.332C148.664 51.7383 148.961 50.9023 148.961 49.8242V48.7344C148.094 49.7344 146.91 50.2344 145.41 50.2344C143.926 50.2344 142.723 49.6367 141.801 48.4414C140.887 47.2461 140.43 45.6172 140.43 43.5547ZM142.609 43.8008C142.609 45.2305 142.902 46.3555 143.488 47.1758C144.074 47.9883 144.895 48.3945 145.949 48.3945C147.316 48.3945 148.32 47.7734 148.961 46.5312V40.7422C148.297 39.5312 147.301 38.9258 145.973 38.9258C144.918 38.9258 144.094 39.3359 143.5 40.1562C142.906 40.9766 142.609 42.1914 142.609 43.8008ZM159.684 50.2344C157.965 50.2344 156.566 49.6719 155.488 48.5469C154.41 47.4141 153.871 45.9023 153.871 44.0117V43.6133C153.871 42.3555 154.109 41.2344 154.586 40.25C155.07 39.2578 155.742 38.4844 156.602 37.9297C157.469 37.3672 158.406 37.0859 159.414 37.0859C161.062 37.0859 162.344 37.6289 163.258 38.7148C164.172 39.8008 164.629 41.3555 164.629 43.3789V44.2812H156.039C156.07 45.5312 156.434 46.543 157.129 47.3164C157.832 48.082 158.723 48.4648 159.801 48.4648C160.566 48.4648 161.215 48.3086 161.746 47.9961C162.277 47.6836 162.742 47.2695 163.141 46.7539L164.465 47.7852C163.402 49.418 161.809 50.2344 159.684 50.2344ZM159.414 38.8672C158.539 38.8672 157.805 39.1875 157.211 39.8281C156.617 40.4609 156.25 41.3516 156.109 42.5H162.461V42.3359C162.398 41.2344 162.102 40.3828 161.57 39.7812C161.039 39.1719 160.32 38.8672 159.414 38.8672ZM173.277 39.2656C172.949 39.2109 172.594 39.1836 172.211 39.1836C170.789 39.1836 169.824 39.7891 169.316 41V50H167.148V37.3203H169.258L169.293 38.7852C170.004 37.6523 171.012 37.0859 172.316 37.0859C172.738 37.0859 173.059 37.1406 173.277 37.25V39.2656Z\"\n          fill=\"#FFA000\"\n          fontFamily=\"Roboto\"\n        />\n      </svg>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from \"react\";\n\nimport \"./Icon.scss\";\n\nconst Icon = (props) => {\n  return (\n    <i className={`fa fa-${props.icon}`}></i>\n  )\n};\n\nexport default Icon;\n","import * as actionTypes from \"./actionTypes\";\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START,\n  };\n};\n\nexport const authSuccess = (idToken, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken,\n    userId,\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error,\n  };\n};\n\n// 1. main action creator => auth start, sucess, fail\nexport const auth = (email, password) => {\n  return {\n    type: actionTypes.AUTH_USER,\n    email,\n    password,\n  };\n};\n\n// 2. action creator for taking token time\nexport const checkAuthTimeout = (expirationTime) => {\n  return {\n    type: actionTypes.AUTH_CHECK_TIMEOUT,\n    expirationTime: expirationTime,\n  };\n};\n\n// 3. action creator for logout (one for remove from local storage)\nexport const logout = () => {\n  return {\n    type: actionTypes.AUTH_INITIATE_LOGOUT,\n  };\n};\n\nexport const logoutSucced = () => {\n  return {\n    type: actionTypes.AUTH_LOGOUT,\n  };\n};\n\n// 4. action creator for checking state\nexport const authCheckState = () => {\n    return {\n        type: actionTypes.AUTH_CHECK_STATE,\n    }\n  };\n","// authentication\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_USER = \"AUTH_USER\";\n\nexport const AUTH_CHECK_TIMEOUT = \"AUTH_CHECK_TIMEOUT\";\nexport const AUTH_CHECK_STATE = \"AUTH_CHECK_STATE\";\n\nexport const AUTH_INITIATE_LOGOUT = \"AUTH_INITIATE_LOGOUT\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\n\n// customer - adding new\nexport const ADD_CUSTOMER_START = \"ADD_CUSTOMER_START\";\nexport const ADD_CUSTOMER_SUCCESS = \"ADD_CUSTOMER_SUCCESS\";\nexport const ADD_CUSTOMER_FAIL = \"ADD_CUSTOMER_FAIL\";\nexport const ADD_CUSTOMER_FINISHED = \"ADD_CUSTOMER_FINISHED\";\n\nexport const ADD_CUSTOMER = \"ADD_CUSTOMER\";\n\n// customers - fetching all customers\nexport const FETCH_CUSTOMERS_START = \"FETCH_CUSTOMERS_START\";\nexport const FETCH_CUSTOMERS_SUCCESS = \"FETCH_CUSTOMERS_SUCCESS\";\nexport const FETCH_CUSTOMERS_FAIL = \"FETCH_CUSTOMERS_FAIL\";\n\nexport const FETCH_ALL_CUSTOMERS = \"FETCH_ALL_CUSTOMERS\";\n\n// customer - fetching one customer\nexport const FETCH_CUSTOMER_START = \"FETCH_CUSTOMER_START\";\nexport const FETCH_CUSTOMER_SUCCESS = \"FETCH_CUSTOMER_SUCCESS\";\nexport const FETCH_CUSTOMER_FAIL = \"FETCH_CUSTOMER_FAIL\";\n\nexport const FETCH_ONE_CUSTOMER = \"FETCH_ONE_CUSTOMER\";\n\n// customer - editing\nexport const EDIT_CUSTOMER_START = \"EDIT_CUSTOMER_START\";\nexport const EDIT_CUSTOMER_SUCCESS = \"EDIT_CUSTOMER_SUCCESS\";\nexport const EDIT_CUSTOMER_FAIL = \"EDIT_CUSTOMER_FAIL\";\nexport const EDIT_CUSTOMER_FINISHED = \"EDIT_CUSTOMER_FINISHED\";\n\nexport const EDIT_CUSTOMER = \"EDIT_CUSTOMER\";\n\n// customer - deleting\nexport const DELETE_CUSTOMER_START = \"DELETE_CUSTOMER_START\";\nexport const DELETE_CUSTOMER_SUCCESS = \"DELETE_CUSTOMER_SUCCESS\";\nexport const DELETE_CUSTOMER_FAIL = \"DELETE_CUSTOMER_FAIL\";\nexport const DELETE_CUSTOMER_FINISHED = \"DELETE_CUSTOMER_FINISHED\";\n\nexport const DELETE_CUSTOMER = \"DELETE_CUSTOMER\";\n\n\n// tools (search, filter, sort)\nexport const SEARCH_QUERY = \"SEARCH_QUERY\";\nexport const SORT_QUERY = \"SORT_QUERY\";\nexport const FILTER_QUERY_ONE = \"FILTER_QUERY_ONE\";\nexport const FILTER_QUERY_TWO = \"FILTER_QUERY_TWO\";\nexport const RESET_ALL_FILTERS = \"RESET_ALL_FILTERS\";","import React from \"react\";\n\nimport \"./Spinner.scss\";\n\nconst Spinner = () => {\n  return <div className=\"Loader\">Loading...</div>;\n};\n\nexport default Spinner;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./Auth.scss\";\nimport Input from \"../../components/UI/Input/Input\";\nimport { checkValidity } from \"../../components/helper/CheckValidity\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Logo from \"../../components/Logo/Logo\";\nimport Icon from \"../../components/UI/Icon/Icon\";\nimport * as actions from \"../../store/actions\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport ErrorMessage from \"../../components/UI/ErrorMessage/ErrorMessage\";\n\nconst Auth = (props) => {\n  console.log(props);\n  const [authForm, setAuthForm] = useState({\n    email: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"email\",\n        label: \"Email\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      message: \"Email must contain @ character.\",\n      valid: false,\n      touched: false,\n      icon: \"envelope\",\n    },\n    password: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"password\",\n        label: \"Password\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 6,\n      },\n      message: \"Password must have minimum 6 characters.\",\n      valid: false,\n      touched: false,\n      icon: \"lock\",\n    },\n  });\n\n  const inputChangedHandler = (e, inputIdentifier) => {\n    const updatedAuthForm = {\n      ...authForm,\n    };\n    const updatedFormElement = { ...updatedAuthForm[inputIdentifier] };\n    updatedFormElement.value = e.target.value;\n\n    updatedFormElement.valid = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n\n    updatedFormElement.touched = true;\n    updatedAuthForm[inputIdentifier] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedAuthForm) {\n      formIsValid = updatedAuthForm[inputIdentifier].valid && formIsValid;\n    }\n    setAuthForm(updatedAuthForm);\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    props.onAuth(authForm.email.value, authForm.password.value);\n  };\n\n  const formElementsArray = [];\n  for (let key in authForm) {\n    formElementsArray.push({\n      id: key,\n      config: authForm[key],\n    });\n  }\n\n  let form = (\n    <form className=\"Form\" autoComplete=\"off\" onSubmit={onSubmitHandler}>\n      {formElementsArray.map((el, idx) => {\n        return (\n          <div key={idx} className=\"InputIcon\">\n            <Icon icon={el.config.icon} />\n            <Input\n              key={el.id}\n              elementType={el.config.elementType}\n              elementConfig={el.config.elementConfig}\n              value={el.config.value}\n              shouldValidate={el.config.validation}\n              invalid={!el.config.valid}\n              message={el.config.message}\n              touched={el.config.touched}\n              label={el.config.elementConfig.label}\n              changed={(e) => inputChangedHandler(e, el.id)}\n            />\n          </div>\n        );\n      })}\n      <Button>LOGIN</Button>\n    </form>\n  );\n\n  if (props.isLoading) {\n    form = <Spinner />;\n  }\n\n  let error;\n  if (props.error) {\n    switch (props.error.message) {\n      case \"EMAIL_NOT_FOUND\":\n        error = \"Sorry, we couldn't find an account with that email address.\";\n        break;\n      case \"INVALID_PASSWORD\":\n        error = \"Sorry, this password is not right.\";\n        break;\n      case \"USER_DISABLED\":\n        error = \"Sorry, you don't have permission to access.\";\n        break;\n      default:\n        error = \"Sorry, something went wrong.\";\n    }\n  }\n\n  return (\n    <div className=\"Auth\">\n      {props.isAuthenticated ? <Redirect to=\"/\" /> : null}\n      <Logo />\n      <div className=\"WelcomeAndForm\">\n        <div className=\"Welcome\">\n          Welcome to Customer Manager\n          <div className=\"WelcomeMessage\">\n            The customer management admin board\n          </div>\n        </div>\n        <div className=\"LoginForm\">\n          <div>\n            <span className=\"LoginText\">Login</span> to your account\n          </div>\n          {props.error ? <ErrorMessage>{error}</ErrorMessage> : null}\n          {form}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.idToken !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React from \"react\";\n\nconst Checkbox = ({ type = \"checkbox\", name, checked = false, onChange }) => {\n  return (\n    <input type={type} name={name} checked={checked} onChange={onChange} />\n  );\n};\n\nexport default Checkbox;\n","import React from \"react\";\n\nimport \"./Checkboxes.scss\";\nimport Checkbox from \"../../../../components/UI/Input/Checkbox/Checkbox\";\nimport { connect } from \"react-redux\";\n\nconst Checkboxes = (props) => {\n  const handleChange = (e) => {\n    props.onCheck(e.target.name);\n  };\n\n  return (\n    <form className=\"FilterForm\">\n      <div className=\"BorderCheckbox\">\n        <label className=\"LabelCheckbox\">{props.title}</label>\n        <div className=\"Checkboxes-main\">\n          {props.checkboxes.map((el) => (\n            <label key={el.name} className=\"Container\">\n              <div>{el.name}</div>\n              <Checkbox\n                name={el.name}\n                checked={\n                  props.filterQueryOneFromRedux[el.name] ||\n                  props.filterQueryTwoFromRedux[el.name]\n                }\n                onChange={handleChange}\n              />\n              <span className=\"Checkmark\"></span>\n            </label>\n          ))}\n        </div>\n      </div>\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    filterQueryOneFromRedux: state.tools.filterQueryOne,\n    filterQueryTwoFromRedux: state.tools.filterQueryTwo,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Checkboxes);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./Filter.scss\";\nimport Icon from \"../../../components/UI/Icon/Icon\";\nimport Checkboxes from \"./Checkboxes/Checkboxes\";\nimport * as actions from \"../../../store/actions\";\n\nconst Filter = (props) => {\n  const companySize = [\n    { name: \"Micro\" },\n    { name: \"Small\" },\n    { name: \"Medium\" },\n    { name: \"Large\" },\n  ];\n\n  const industry = [\n    { name: \"Education\" },\n    { name: \"Finance\" },\n    { name: \"Health\" },\n    { name: \"IT\" },\n    { name: \"Production\" },\n    { name: \"Other\" },\n  ];\n  return (\n    <div className=\"Filter\">\n      <div className=\"SortTitle\">\n        <Icon icon=\"filter\" />\n        <span>Filter</span>\n      </div>\n      <Checkboxes\n        title=\"Company size\"\n        checkboxes={companySize}\n        onCheck={props.onFilterOne}\n      />\n      <Checkboxes\n        title=\"Industry\"\n        checkboxes={industry}\n        onCheck={props.onFilterTwo}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFilterOne: (query) => dispatch(actions.filterQueryOne(query)),\n    onFilterTwo: (query) => dispatch(actions.filterQueryTwo(query)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import * as actionTypes from \"./actionTypes\";\n\n// search\nexport const searchQuery = (query) => {\n  return {\n    type: actionTypes.SEARCH_QUERY,\n    query,\n  };\n};\n\n// sort\nexport const sortQuery = (query) => {\n  return {\n    type: actionTypes.SORT_QUERY,\n    query,\n  };\n};\n\n// filter\nexport const filterQueryOne = (query) => {\n  return {\n    type: actionTypes.FILTER_QUERY_ONE,\n    query,\n  };\n};\n\nexport const filterQueryTwo = (query) => {\n  return {\n    type: actionTypes.FILTER_QUERY_TWO,\n    query,\n  };\n};\n\n// reset all filters\nexport const resetAllFilters = () => {\n  return {\n    type: actionTypes.RESET_ALL_FILTERS,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./Sort.scss\";\nimport Icon from \"../../../components/UI/Icon/Icon\";\nimport * as actions from \"../../../store/actions\";\n\nconst Sort = (props) => {\n  return (\n    <div className=\"Sort\">\n      <div className=\"SortTitle\">\n        <Icon icon=\"sort\" />\n        <span>Sort</span>\n      </div>\n      <div className=\"Select\">\n        <select\n          value={props.sortQueryFromRedux || \"\"}\n          onChange={(e) => props.onSort(e.target.value)}\n        >\n          <option value=\"\" disabled>\n            Sort by:\n          </option>\n          <option value=\"az\">Name - A-Z</option>\n          <option value=\"za\">Name - Z-A</option>\n          <option value=\"asc\">Turnover - Ascending</option>\n          <option value=\"des\">Turnover - Descending</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    sortQueryFromRedux: state.tools.sortQuery,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSort: (query) => dispatch(actions.sortQuery(query)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sort);\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./Toolbar.scss\";\nimport Logo from \"../../components/Logo/Logo\";\nimport Icon from \"../../components/UI/Icon/Icon\";\nimport Filter from \"../Tools/Filter/Filter\";\nimport Sort from \"../Tools/Sort/Sort\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nconst Toolbar = (props) => {\n  const location = useLocation();\n\n  return (\n    <div\n      className={classNames(\"Toolbar\", {\n        OpenedMobileToolbar: props.open,\n        ClosedMobileToolbar: !props.open,\n      })}\n    >\n      <div className=\"ToolbarLogo\">\n        <Logo />\n      </div>\n\n      <div className=\"ToolbarIcons\">\n        <div className=\"ToolbarIcon\" onClick={() => props.onResetAllFilters()}>\n          <Link to=\"/\">\n            <Icon icon=\"home\" /> Home\n          </Link>\n        </div>\n        <div className=\"ToolbarIcon\">\n          <Link to=\"/documentation\">\n            <Icon icon=\"file\" /> Documentation\n          </Link>\n        </div>\n      </div>\n\n      {location.pathname === \"/\" ? (\n        <>\n          <Sort /> <Filter />\n        </>\n      ) : null}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onResetAllFilters: () => dispatch(actions.resetAllFilters()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Toolbar);\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./Customer.scss\";\n\nconst Customer = (props) => {\n  // default state for each customer card is 'one' which stands for contact details\n  const [showContent, setShowContent] = useState(\"one\");\n  const [activeSelected, setActiveSelected] = useState(\n    \"CustomerIcon fa fa-address-card\"\n  );\n\n  const openContent = (text) => {\n    setShowContent(text);\n  };\n\n  const handleClick = (e) => {\n    e.stopPropagation();\n    if (e.target.className.includes(\"Active\") && activeSelected !== \"\") {\n      setActiveSelected(\"\");\n    }\n    setActiveSelected(e.target.className);\n  };\n\n  let content;\n  switch (showContent) {\n    case \"one\":\n      content = (\n        <div className=\"CustomerContent\">\n          <div>\n            <b>Phone:</b> {props.phone}\n          </div>\n          <div>\n            <b>Email:</b> {props.email}\n          </div>\n        </div>\n      );\n      break;\n    case \"two\":\n      content = (\n        <div className=\"CustomerContent\">\n          <div>\n            <b>Company size:</b> {props.size}\n          </div>\n          <div>\n            <b>Industry:</b> {props.industry}\n          </div>\n        </div>\n      );\n      break;\n    case \"three\":\n      content = (\n        <div className=\"CustomerContent\">\n          <div>\n            <b>Turnover:</b>{\" \"}\n            {`RSD ${(props.operatingRevenue / 1000).toFixed(1)} mil.`}\n          </div>\n          <div>\n            <b>EBIT margin:</b>{\" \"}\n            {((props.operatingRevenue - props.operatingExpenses) /\n              props.operatingRevenue) *\n              100 >\n            0\n              ? `${(\n                  ((props.operatingRevenue - props.operatingExpenses) /\n                    props.operatingRevenue) *\n                  100\n                ).toFixed(2)}%`\n              : `n.a`}\n          </div>\n        </div>\n      );\n      break;\n    default:\n      content = (\n        <div className=\"CustomerContent\">Ooops, something went wrong!</div>\n      );\n  }\n\n  return (\n    <div className=\"Customer\">\n      <div className=\"CustomerTitle\">\n        <div>\n          <div className=\"Border\">\n            <div className=\"BorderOne\"></div>\n            <div className=\"BorderTwo\"></div>\n            <div className=\"BorderThree\"></div>\n          </div>\n          <div className=\"BorderUnderline\"></div>\n        </div>\n        <h3>{props.name}</h3>\n        <div className=\"CustomerIcons\">\n          <i\n            className={classNames(\"CustomerIcon\", \"fa fa-address-card\", {\n              Active: activeSelected === \"CustomerIcon fa fa-address-card\",\n            })}\n            onClick={(e) => {\n              handleClick(e);\n              openContent(\"one\");\n            }}\n          ></i>\n          <i\n            className={classNames(\"CustomerIcon\", \"fa fa-industry\", {\n              Active: activeSelected === \"CustomerIcon fa fa-industry\",\n            })}\n            onClick={(e) => {\n              handleClick(e);\n              openContent(\"two\");\n            }}\n          ></i>\n          <i\n            className={classNames(\"CustomerIcon\", \"fa fa-percent\", {\n              Active: activeSelected === \"CustomerIcon fa fa-percent\",\n            })}\n            onClick={(e) => {\n              handleClick(e);\n              openContent(\"three\");\n            }}\n          ></i>\n        </div>\n      </div>\n      <div className=\"CustomerData\">\n        {content}\n        <Link to={`/show/${props.id}`} className=\"Button\">\n          VIEW\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Customer;\n","import React from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nimport \"./Pagination.scss\";\nimport Icon from '../../../components/UI/Icon/Icon'\n\nconst Pagination = (props) => {\n  return (\n    <div className=\"Pagination\">\n      <ReactPaginate\n        previousLabel={<Icon icon={\"angle-double-left\"}/>}\n        nextLabel={<Icon icon={\"angle-double-right\"}/>}\n        breakLabel={\"...\"}\n        breakClassName={\"break-me\"}\n        pageCount={props.pageCount}\n        marginPagesDisplayed={2}\n        pageRangeDisplayed={5}\n        onPageChange={props.handlePageClick}\n        containerClassName={\"pagination\"}\n        subContainerClassName={\"pages pagination\"}\n        activeClassName={\"active\"}\n        disabledClassName={\"disabled\"}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"./CustomersList.scss\";\nimport * as actions from \"../../../store/actions\";\nimport * as sorts from \"../../../components/helper/SortingFunctions\";\nimport Customer from \"../../../components/Customers/Customer\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Pagination from \"../../Tools/Pagination/Pagination\";\n\nconst handleFilteringAndSorting = (tools, allCustomers) => {\n  const { searchQuery, sortQuery, filterQueryOne, filterQueryTwo } = tools; // tools destructured from props\n\n  let filteredCustomersArray = allCustomers\n    .filter((el) =>\n      el.customerData.companyName.toLowerCase().includes(searchQuery)\n    )\n    .filter((elm) =>\n      Object.values(filterQueryOne).some((item) => item)\n        ? filterQueryOne[elm.customerData.size]\n        : true\n    )\n    .filter((elem) =>\n      Object.values(filterQueryTwo).some((item) => item)\n        ? filterQueryTwo[elem.customerData.industry]\n        : true\n    );\n\n  let sortArr = [];\n  switch (sortQuery) {\n    case \"az\":\n      sortArr = sorts.sortAsc(filteredCustomersArray, \"companyName\");\n      break;\n    case \"za\":\n      sortArr = sorts.sortDesc(filteredCustomersArray, \"companyName\");\n      break;\n    case \"asc\":\n      sortArr = sorts.sortAscNum(filteredCustomersArray, \"operatingRevenue\");\n      break;\n    case \"des\":\n      sortArr = sorts.sortDescNum(filteredCustomersArray, \"operatingRevenue\");\n      break;\n    default:\n      sortArr = filteredCustomersArray;\n  }\n  return sortArr;\n};\n\nconst CustomersList = (props) => {\n  //// 1. fetching of customers\n  const fetchAllCustomersRef = useRef(props.fetchAllCustomers);\n  const tokenRef = useRef(props.token);\n  const userIdRef = useRef(props.userId);\n\n  useEffect(() => {\n    fetchAllCustomersRef.current(tokenRef.current, userIdRef.current);\n  }, []);\n\n  //// 2. search, filter and sort\n  const [resultArr, setResultArr] = useState([]);\n\n  useEffect(() => {\n    const sortArr = handleFilteringAndSorting(props.tools, props.allCustomers);\n\n    setResultArr(sortArr);\n    setPaginationDetails((currentPaginatedResult) => ({\n      ...currentPaginatedResult,\n      data: sortArr,\n      pageCount: Math.ceil(sortArr.length / currentPaginatedResult.perPage),\n    }));\n  }, [props.tools, props.allCustomers]);\n\n  //// 3. pagination\n  const [paginationDetails, setPaginationDetails] = useState({\n    offset: 0,\n    data: [],\n    perPage: 10,\n    currentPage: 0,\n    pageCount: 0,\n  });\n\n  const handlePageClick = (e) => {\n    const selectedPage = e.selected;\n    const offset = selectedPage * paginationDetails.perPage;\n\n    setPaginationDetails({\n      ...paginationDetails,\n      currentPage: selectedPage,\n      offset: offset,\n    });\n  };\n\n  useEffect(() => {\n    setPaginationDetails((currentPaginatedResult) => ({\n      ...currentPaginatedResult,\n      data: props.allCustomers,\n      pageCount: Math.ceil(\n        props.allCustomers.length / currentPaginatedResult.perPage\n      ),\n    }));\n  }, [props.allCustomers]);\n\n  let showAllCustomers = null;\n  const customersArrayForMap = Object.values(props.tools).some((el) => el) // check if there is anything in Redux store in tools obj (any query)\n    ? resultArr\n    : props.allCustomers;\n  const slice = customersArrayForMap.slice(\n    paginationDetails.offset,\n    paginationDetails.offset + paginationDetails.perPage\n  );\n\n  if (slice) {\n    showAllCustomers = slice.map((el) => (\n      <Customer\n        key={el.id}\n        id={el.id}\n        name={el.customerData.companyName}\n        website={el.customerData.website}\n        operatingRevenue={el.customerData.operatingRevenue}\n        operatingExpenses={el.customerData.operatingExpenses}\n        size={el.customerData.size}\n        industry={el.customerData.industry}\n        phone={el.customerData.phone}\n        email={el.customerData.email}\n      />\n    ));\n  }\n\n  if (props.isLoading) {\n    showAllCustomers = <Spinner />;\n  }\n\n  return (\n    <div className=\"CustomersList\">\n      <div className=\"AddCustomerButton_Container\">\n        <Link to=\"/new\" className=\"AddCustomerButton\">\n          <div className=\"Plus\">+</div>\n          <div>Add customer</div>\n        </Link>\n      </div>\n      <div>\n        <Pagination\n          pageCount={paginationDetails.pageCount}\n          handlePageClick={handlePageClick}\n        />\n        <div className=\"CustomersBreakdown\">\n          {showAllCustomers ? showAllCustomers : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    allCustomers: state.customers.allCustomers,\n    token: state.auth.idToken,\n    userId: state.auth.userId,\n    isLoading: state.customers.loading,\n    tools: state.tools,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAllCustomers: (token, userId) =>\n      dispatch(actions.fetchAllCustomers(token, userId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomersList);\n","export const sortAsc = (arr, field) => {\n  return arr.sort((a, b) => {\n    if (a.customerData[field] > b.customerData[field]) {\n      return 1;\n    }\n    if (b.customerData[field] > a.customerData[field]) {\n      return -1;\n    }\n    return 0;\n  });\n};\n\nexport const sortDesc = (arr, field) => {\n  return arr.sort((a, b) => {\n    if (a.customerData[field] > b.customerData[field]) {\n      return -1;\n    }\n    if (b.customerData[field] > a.customerData[field]) {\n      return 1;\n    }\n    return 0;\n  });\n};\n\nexport const sortAscNum = (arr, field) => {\n  return arr.sort(\n    (a, b) => parseInt(a.customerData[field]) - parseInt(b.customerData[field])\n  );\n};\n\nexport const sortDescNum = (arr, field) => {\n  return arr.sort(\n    (a, b) => parseInt(b.customerData[field]) - parseInt(a.customerData[field])\n  );\n};\n","import * as actionTypes from \"./actionTypes\";\n\n// 1. adding new customer\nexport const addCustomerStart = () => {\n  return {\n    type: actionTypes.ADD_CUSTOMER_START,\n  };\n};\n\nexport const addCustomerSuccess = (id, customerData) => {\n  return {\n    type: actionTypes.ADD_CUSTOMER_SUCCESS,\n    customerId: id,\n    customerData,\n  };\n};\n\nexport const addCustomerFail = (error) => {\n  return {\n    type: actionTypes.ADD_CUSTOMER_FAIL,\n    error,\n  };\n};\n\nexport const addCustomerFinished = () => {\n  return {\n    type: actionTypes.ADD_CUSTOMER_FINISHED,\n  };\n};\n// ---> main one\nexport const customerAdd = (customerData, token) => {\n  return {\n    type: actionTypes.ADD_CUSTOMER,\n    customerData,\n    token,\n  };\n};\n\n// 2. fetching all customers\nexport const fetchCustomersStart = () => {\n  return {\n    type: actionTypes.FETCH_CUSTOMERS_START,\n  };\n};\n\nexport const fetchCustomersSuccess = (allCustomers) => {\n  return {\n    type: actionTypes.FETCH_CUSTOMERS_SUCCESS,\n    allCustomers,\n  };\n};\n\nexport const fetchCustomersFail = (error) => {\n  return {\n    type: actionTypes.FETCH_CUSTOMERS_FAIL,\n    error,\n  };\n};\n\n// ---> main one\nexport const fetchAllCustomers = (token, userId) => {\n  return {\n    type: actionTypes.FETCH_ALL_CUSTOMERS,\n    token,\n    userId,\n  };\n};\n\n// 3. fetching one customer\nexport const fetchCustomerStart = () => {\n  return {\n    type: actionTypes.FETCH_CUSTOMER_START,\n  };\n};\n\nexport const fetchCustomerSuccess = (particularCustomer) => {\n  return {\n    type: actionTypes.FETCH_CUSTOMER_SUCCESS,\n    particularCustomer,\n  };\n};\n\nexport const fetchCustomerFail = (error) => {\n  return {\n    type: actionTypes.FETCH_CUSTOMER_FAIL,\n    error,\n  };\n};\n\n// ---> main one\nexport const fetchOneCustomer = (token, id) => {\n  return {\n    type: actionTypes.FETCH_ONE_CUSTOMER,\n    token,\n    id,\n  };\n};\n\n// 4. editing customer\nexport const editCustomerStart = () => {\n  return {\n    type: actionTypes.EDIT_CUSTOMER_START,\n  };\n};\n\nexport const editCustomerSuccess = (id, customerData) => {\n  return {\n    type: actionTypes.EDIT_CUSTOMER_SUCCESS,\n    customerId: id,\n    customerData,\n  };\n};\n\nexport const editCustomerFail = (error) => {\n  return {\n    type: actionTypes.EDIT_CUSTOMER_FAIL,\n    error,\n  };\n};\n\nexport const editCustomerFinished = () => {\n  return {\n    type: actionTypes.EDIT_CUSTOMER_FINISHED,\n  };\n};\n\n// ---> main one\nexport const customerEdit = (customerData, token, id) => {\n  return {\n    type: actionTypes.EDIT_CUSTOMER,\n    customerData,\n    token,\n    id,\n  };\n};\n\n// 5. deleting customer\nexport const deleteCustomerStart = () => {\n  return {\n    type: actionTypes.DELETE_CUSTOMER_START,\n  };\n};\n\nexport const deleteCustomerSuccess = (id) => {\n  return {\n    type: actionTypes.DELETE_CUSTOMER_SUCCESS,\n    customerId: id,\n  };\n};\n\nexport const deleteCustomerFail = (error) => {\n  return {\n    type: actionTypes.DELETE_CUSTOMER_FAIL,\n    error,\n  };\n};\n\nexport const deleteCustomerFinished = () => {\n  return {\n    type: actionTypes.DELETE_CUSTOMER_FINISHED,\n  };\n};\n\n// ---> main one\nexport const customerDelete = (token, id) => {\n  return {\n    type: actionTypes.DELETE_CUSTOMER,\n    token,\n    id,\n  };\n};\n","import React from \"react\";\n\nimport \"./Circle.scss\";\n\nconst Circle = (props) => {\n  const radius = 5;\n\n  let checkmarkSvgCircle;\n  if (props.valid) {\n    switch (props.color) {\n      case \"#ffa000\":\n        checkmarkSvgCircle = \"SvgCircle_One\";\n        break;\n      case \"#46d4b4\":\n        checkmarkSvgCircle = \"SvgCircle_Two\";\n        break;\n      case \"#1580de\":\n        checkmarkSvgCircle = \"SvgCircle_Three\";\n        break;\n      default:\n        checkmarkSvgCircle = \"\";\n    }\n  } else {\n    checkmarkSvgCircle = \"\";\n  }\n\n  return (\n    <svg height={radius * 2} width={radius * 2}>\n      <circle\n        className={checkmarkSvgCircle}\n        stroke=\"none\"\n        fill=\"rgba(0, 0, 0, 0.2)\"\n        overflow=\"hidden\"\n        r={radius}\n        cx={radius}\n        cy={radius}\n      ></circle>\n    </svg>\n  );\n};\n\nexport default Circle;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./CustomerForm.scss\";\nimport Input from \"../../components/UI/Input/Input\";\nimport { checkValidity } from \"../../components/helper/CheckValidity\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Circle from \"../../components/UI/Circle/Circle\";\n\nconst CustomerForm = (props) => {\n  const [customerForm, setCustomerForm] = useState({\n    companyName: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"text\",\n        label: \"Company name\",\n        placeholder: \"e.g. Company LLC\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 3,\n        maxLength: 30,\n      },\n      message: 'Name must have between 3 and 30 characters.',\n      valid: false,\n      touched: false,\n    },\n    website: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"url\",\n        label: \"Website\",\n        placeholder: \"e.g. https://www.company.com\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      message: 'Website must be url and start with https://.',\n      valid: false,\n      touched: false,\n    },\n    regNumber: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Registration number\",\n        placeholder: \"e.g. 111222334\",\n      },\n      message: 'Registration number must have exact 8 digits.',\n      value: \"\",\n      validation: {\n        required: true,\n        length: 8,\n      },\n      valid: false,\n      touched: false,\n    },\n    address: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"text\",\n        label: \"Address\",\n        placeholder: \"e.g. 19 First Street\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        minLength: 3,\n        maxLength: 30,\n      },\n      message: 'Address must have between 3 and 30 characters.',\n      valid: false,\n      touched: false,\n    },\n    phone: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"phone\",\n        label: \"Phone\",\n        placeholder: \"e.g. 011 1234567 or +381 11 1234567\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPhone: true,\n      },\n      message: 'Please try with forms 011/123456 or +381 11 123456.',\n      valid: false,\n      touched: false,\n    },\n    email: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"email\",\n        label: \"Email\",\n        placeholder: \"e.g. company@mail.com\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isEmail: true,\n      },\n      message: 'Email must contain @ character.',\n      valid: false,\n      touched: false,\n    },\n    industry: {\n      elementType: \"select\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Industry\",\n        obj: [\"Education\", \"Finance\", \"Health\", \"IT\", \"Production\", \"Other\"],\n      },\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      valid: false,\n      touched: false,\n    },\n    size: {\n      elementType: \"select\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Company Size\",\n        obj: [\"Micro\", \"Small\", \"Medium\", \"Large\"],\n      },\n      value: \"\",\n      validation: {\n        required: true,\n      },\n      valid: false,\n      touched: false,\n    },\n    employees: {\n      elementType: \"input\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Number of Employees\",\n        placeholder: \"e.g. 50 or 100\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n    operatingRevenue: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Operating revenue (Turnover)\",\n        placeholder: \"e.g. 100,000\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n    operatingExpenses: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Operating expenses\",\n        placeholder: \"e.g. 85,000\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n    financialRevenue: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Financial revenue\",\n        placeholder: \"e.g. 10,000\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n    financialExpenses: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Financial expenses\",\n        placeholder: \"e.g. 8,000\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n    otherRevenue: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Extraordinary and other revenue\",\n        placeholder: \"e.g. 1,000\",\n      },\n      message: 'Please enter number higher or equal to 0.',\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      valid: false,\n      touched: false,\n    },\n    otherExpenses: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Extraordinary and other expenses\",\n        placeholder: \"e.g. 700\",\n      },\n      message: 'Please enter number higher or equal to 0.',\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      valid: false,\n      touched: false,\n    },\n    taxation: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Tax (Corporate Income Tax)\",\n        placeholder: \"e.g. 5,000\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n    fixedAssets: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Fixed assets\",\n        placeholder: \"e.g. 1,000,000\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n    currentAssets: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Current assets\",\n        placeholder: \"e.g. 1,000,000\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n    equity: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Shareholder's equity\",\n        placeholder: \"e.g. 100,000\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n    longTermLiabilities: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Long term liabilities\",\n        placeholder: \"e.g. 900,000\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n    shortTermLiabilities: {\n      elementType: \"inputFormated\",\n      elementConfig: {\n        type: \"number\",\n        label: \"Short term liabilities\",\n        placeholder: \"e.g. 900,000\",\n      },\n      value: \"\",\n      validation: {\n        required: true,\n        isPositive: true,\n      },\n      message: 'Please enter number higher or equal to 0.',\n      valid: false,\n      touched: false,\n    },\n  });\n\n  /// form valditity\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  /// setting initial data for customer editing\n  const initialFormValuesHandler = () => {\n    const initialCustomerFormForEditing = {\n      ...customerForm,\n    };\n    for (let formElementIdentifier in initialCustomerFormForEditing) {\n      initialCustomerFormForEditing[formElementIdentifier].value =\n        props.initialFormValues[formElementIdentifier]; //setting that it is equal to ones passed from props (props are comming from CustomerEdit and are fetched from Redux store)\n\n      initialCustomerFormForEditing[\n        formElementIdentifier\n      ].valid = checkValidity(\n        initialCustomerFormForEditing[formElementIdentifier].value,\n        initialCustomerFormForEditing[formElementIdentifier].validation\n      );\n    }\n    let formIsValid = true;\n    for (let inputIdentifier in initialCustomerFormForEditing) {\n      formIsValid =\n        initialCustomerFormForEditing[inputIdentifier].valid && formIsValid;\n    }\n    setCustomerForm(initialCustomerFormForEditing);\n    setFormIsValid(formIsValid);\n  };\n  const initialFormValuesHandlerRef = useRef(initialFormValuesHandler);\n  const initialFormValuesRef = useRef(props.initialFormValues);\n\n  useEffect(() => {\n    if (initialFormValuesRef.current) {\n      initialFormValuesHandlerRef.current();\n    } //on mount of this component check if there is props.initialFormValues => if yes (called from edit page), if not (called from create page)\n  }, []);\n\n  /// input change handler\n  const inputChangedHandler = (e, inputIdentifier) => {\n    const updatedCustomerForm = {\n      ...customerForm,\n    };\n    const updatedFormElement = { ...updatedCustomerForm[inputIdentifier] };\n    updatedFormElement.value = e.target.value;\n\n    updatedFormElement.valid = checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n\n    updatedFormElement.touched = true;\n    updatedCustomerForm[inputIdentifier] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedCustomerForm) {\n      formIsValid = updatedCustomerForm[inputIdentifier].valid && formIsValid;\n    }\n    setCustomerForm(updatedCustomerForm);\n    setFormIsValid(formIsValid);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    const formData = {};\n    for (let formElementIdentifier in customerForm) {\n      formData[formElementIdentifier] =\n        customerForm[formElementIdentifier].value;\n    }\n\n    [\n      \"operatingRevenue\",\n      \"operatingExpenses\",\n      \"financialRevenue\",\n      \"financialExpenses\",\n      \"otherRevenue\",\n      \"otherExpenses\",\n      \"taxation\",\n      \"fixedAssets\",\n      \"currentAssets\",\n      \"equity\",\n      \"longTermLiabilities\",\n      \"shortTermLiabilities\",\n    ].forEach((k) =>\n      typeof formData[k] !== \"number\"\n        ? (formData[k] = parseInt(formData[k].replace(\",\", \"\")))\n        : null\n    ); // goal to submit numbers\n\n    const data = {\n      customerData: formData,\n      userId: props.userId,\n    };\n\n    props.onSubmit(data, props.token, props.id); /// from customer create & customer edit post request\n  };\n\n  /// setting data structure\n  const formElementsArray = [];\n  for (let key in customerForm) {\n    formElementsArray.push({\n      id: key,\n      config: customerForm[key],\n    });\n  }\n\n  // slicing for three main parts to check progress\n  const mainInfoArray = formElementsArray.slice(0, 6);\n  const industryInfoArray = formElementsArray.slice(6, 9);\n  const financialInfoArray = formElementsArray.slice(9, 21);\n\n  /// checking validity for writting steps\n  const settingValidity = (arr) => {\n    const validityArray = [];\n    arr.map((el) => validityArray.push(el.config.valid));\n\n    let resultValidity = {};\n    validityArray.forEach(\n      (el) => (resultValidity[el] = (resultValidity[el] || 0) + 1)\n    );\n\n    return resultValidity;\n  };\n\n  const formPart = (title, array, color) => {\n    const resultValidity = settingValidity(array);\n    const total = Object.values(resultValidity).reduce(\n      (acc, curr) => acc + curr\n    );\n    const progress = resultValidity.true ? resultValidity.true : 0;\n\n    return (\n      <>\n        <div className=\"TableNav\">\n          <div className=\"ColorTitle\">\n            <div className=\"color\" style={{ backgroundColor: color }}></div>\n            <div>{title}</div>\n          </div>\n          <div>\n            {progress} / {total}\n          </div>\n        </div>\n        <table className=\"TableForm\">\n          <tbody>\n            {array.map((el, idx) => {\n              return (\n                <tr key={idx}>\n                  <td className=\"FirstTd\">\n                    <Circle valid={el.config.valid} color={color} />\n                  </td>\n                  <td className=\"SecondTd\">{el.config.elementConfig.label}:</td>\n                  <td className=\"ThirdTd\">\n                    <Input\n                      key={el.id}\n                      elementType={el.config.elementType}\n                      elementConfig={el.config.elementConfig}\n                      value={el.config.value}\n                      shouldValidate={el.config.validation}\n                      invalid={!el.config.valid}\n                      message={el.config.message}\n                      touched={el.config.touched}\n                      label={el.config.elementConfig.label}\n                      placeholder={el.config.elementConfig.placeholder}\n                      changed={(e) => inputChangedHandler(e, el.id)}\n                    />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </>\n    );\n  };\n\n  let form = (\n    <form className=\"Form\" autoComplete=\"off\" onSubmit={onSubmit}>\n      <div className=\"CustomerFormContainer\">\n        {formPart(\"MAIN INFO\", mainInfoArray, \"#ffa000\")}\n        {formPart(\"INDUSTRY AND CLASSIFICATION\", industryInfoArray, \"#46d4b4\")}\n        {formPart(\"FINANCIAL INFO\", financialInfoArray, \"#1580de\")}\n        <Button disabled={!formIsValid}>SAVE</Button>\n      </div>\n    </form>\n  );\n\n  if (props.isLoading) {\n    form = <Spinner />;\n  }\n\n  return <div className=\"CustomerForm\">{form}</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.idToken,\n    userId: state.auth.userId,\n    isLoading: state.customers.loading,\n  };\n};\n\nexport default connect(mapStateToProps, null)(CustomerForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./CustomerCreate.scss\";\nimport CustomerForm from \"../CustomerForm\";\nimport * as actions from \"../../../store/actions\";\n\nconst CustomerCreate = (props) => {\n\n  const onSubmit = (customerData, token) => {\n    props.addCustomer(customerData, token);\n  };\n\n  return (\n    <div className=\"CustomerCreate\">\n      {props.isAddedSuccessfully ? <Redirect to=\"/\" /> : null}\n      <CustomerForm onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAddedSuccessfully: state.customers.isAddedSuccessfully,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addCustomer: (customerData, token) =>\n      dispatch(actions.customerAdd(customerData, token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerCreate);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, useRouteMatch } from \"react-router-dom\";\n\nimport \"./CustomerEdit.scss\";\nimport * as actions from \"../../../store/actions\";\nimport CustomerForm from \"../CustomerForm\";\n\nconst CustomerEdit = (props) => {\n  const match = useRouteMatch();\n  const id = match.params.id;\n\n  const onSubmit = (customerData, token, id) => {\n    props.editCustomer(customerData, token, id);\n  };\n\n  return (\n    <div className=\"CustomerEdit\">\n      {props.isEditedSuccessfully ? <Redirect to=\"/\" /> : null}\n      <CustomerForm initialFormValues={props.particularCustomer.customerData} id={id} onSubmit={onSubmit}/>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    particularCustomer: state.customers.particularCustomer,\n    token: state.auth.idToken,\n    isEditedSuccessfully: state.customers.isEditedSuccessfully,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    editCustomer: (customerData, token, id) =>\n      dispatch(actions.customerEdit(customerData, token, id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerEdit);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./Modal.scss\";\n\nconst Modal = (props) => {\n  return props.show\n    ? ReactDOM.createPortal(\n        <div onClick={props.onDismiss} className=\"Modal\">\n          <div onClick={(e) => e.stopPropagation()} className=\"ModalWindow\">\n            <div className=\"content\">{props.content}</div>\n            <div className=\"actions\">{props.actions}</div>\n          </div>\n        </div>,\n        document.querySelector(\"#modal\")\n      )\n    : null;\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport \"./TableRow.scss\";\n\nconst TableRow = (props) => {\n  return (\n    <tr className=\"Tr\">\n      <td className=\"FirstTableData\">\n        <b>{props.label}</b>\n      </td>\n      <td className=\"SecondTableData\">{props.data}</td>\n    </tr>\n  );\n};\n\nexport default TableRow;\n","import React from \"react\";\n\nimport \"./Table.scss\";\n\nconst Table = (props) => {\n  return (\n    <div className=\"MainInfoTable\">\n      <div className=\"MainInfoTable_Title\">{props.title}</div>\n      <table className=\"TableCustomerShow\"> \n        <tbody>\n          {props.children}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\n\nimport \"./ProfitabilityCircle.scss\";\n\nconst ProfitabilityCircle = (props) => {\n  const radius = 80; //precnik\n  const stroke = 8;\n  const normalizedRadius = radius - stroke * 2; //normalizovani precnik bez debljine ivica\n  const circumference = normalizedRadius * 2 * Math.PI; //obim kruga\n  const strokeDashoffset =\n    circumference -\n    ((props.percent > 0 ? props.percent : 0) / 100) * circumference;\n\n  return (\n    <svg height={radius * 2} width={radius * 2}>\n      <circle\n        stroke={props.colorOne}\n        fill=\"transparent\"\n        strokeWidth={stroke}\n        r={normalizedRadius}\n        cx={radius}\n        cy={radius}\n      />\n      <circle\n        stroke={props.colorTwo}\n        fill=\"transparent\"\n        strokeDasharray={`${circumference} ${circumference}`}\n        strokeDashoffset={strokeDashoffset}\n        strokeWidth={stroke}\n        strokeLinecap=\"round\"\n        r={normalizedRadius}\n        cx={radius}\n        cy={radius}\n        transform={`rotate(-90 ${radius} ${radius})`}\n      />\n      <text\n        className=\"Highlight_Text\"\n        x=\"50%\"\n        y=\"50%\"\n        dominantBaseline=\"middle\"\n        textAnchor=\"middle\"\n        fill=\"#FFFFFF\"\n        opacity={0.7}\n      >\n        {props.percent > 0 ? `${props.percent.toFixed(2)}%` : `n.a.`}\n      </text>\n    </svg>\n  );\n};\n\nexport default ProfitabilityCircle;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRouteMatch, Link, Redirect } from \"react-router-dom\";\n\nimport \"./CustomerShow.scss\";\nimport * as actions from \"../../../store/actions\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Modal from \"../../../components/UI/Modal/Modal\";\nimport TableRow from \"../../../components/UI/Table/TableRow/TableRow\";\nimport Table from \"../../../components/UI/Table/Table\";\nimport ProfitabilityCircle from \"../../../components/UI/Circle/ProfitabilityCircle\";\n\nconst CustomerShow = (props) => {\n  console.log(props);\n  //// modal for deleting customer\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  //// fetching customer from database\n  const match = useRouteMatch();\n  const fetchOneCustomerRef = useRef(props.fetchOneCustomer);\n  const tokenRef = useRef(props.token);\n  const idRef = useRef(match.params.id);\n\n  useEffect(() => {\n    fetchOneCustomerRef.current(tokenRef.current, idRef.current);\n  }, []);\n\n  //// destructuring data about customer and calculation of ratios\n  const {\n    companyName,\n    website,\n    regNumber,\n    address,\n    phone,\n    email,\n    size,\n    industry,\n    employees,\n    operatingRevenue,\n    operatingExpenses,\n    financialRevenue,\n    financialExpenses,\n    otherRevenue,\n    otherExpenses,\n    taxation,\n    fixedAssets,\n    currentAssets,\n    equity,\n    longTermLiabilities,\n    shortTermLiabilities,\n  } = props.particularCustomer.customerData || {};\n\n  let ebit,\n    finResult,\n    otherResult,\n    netIncomePriorTax,\n    netIncome,\n    totalAssets,\n    totalFunds,\n    currentRatio,\n    noa,\n    fixedAssetsTurnoverRatio,\n    totalAssetsTurnoverRatio,\n    debtToEquityRatio,\n    ebitMargin,\n    profitMargin,\n    roa,\n    roe;\n  if (props.particularCustomer) {\n    ebit = operatingRevenue - operatingExpenses;\n    finResult = financialRevenue - financialExpenses;\n    otherResult = otherRevenue - otherExpenses;\n    netIncomePriorTax = ebit + finResult + otherResult;\n    netIncome = netIncomePriorTax - taxation;\n    totalAssets = fixedAssets + currentAssets;\n    totalFunds = equity + longTermLiabilities + shortTermLiabilities;\n    currentRatio = currentAssets / shortTermLiabilities;\n    noa = currentAssets - shortTermLiabilities;\n    fixedAssetsTurnoverRatio = operatingRevenue / fixedAssets;\n    totalAssetsTurnoverRatio = operatingRevenue / totalAssets;\n    debtToEquityRatio = (longTermLiabilities + shortTermLiabilities) / equity;\n    ebitMargin = (ebit / operatingRevenue) * 100;\n    profitMargin = (netIncome / operatingRevenue) * 100;\n    roa =\n      (netIncome / totalAssets) * 100 > 0\n        ? `${((netIncome / totalAssets) * 100).toFixed(2)}%`\n        : `n.a.`;\n    roe =\n      (netIncome / equity) * 100 > 0\n        ? `${((netIncome / equity) * 100).toFixed(2)}%`\n        : `n.a.`;\n  }\n\n  //// showing particular customer\n  let particularCustomerShow = null;\n  if (props.particularCustomer) {\n    particularCustomerShow = (\n      <div className=\"CustomerShowContainer\">\n        <div className=\"CustomerShowContainer_Left\">\n          <div className=\"MainTitle\">\n            <div>{companyName}</div>\n            <div className=\"CustomerShow_Buttons\">\n              <Link to={`/edit/${idRef.current}`} className=\"Button\">\n                EDIT\n              </Link>\n              <button className=\"Button Delete\" onClick={openModal}>\n                DELETE\n              </button>\n            </div>\n          </div>\n\n          <div className=\"Info_and_Industry\">\n            <Table title=\"MAIN INFO\">\n              <TableRow label=\"Website:\" data={website} />\n              <TableRow label=\"Reg. number:\" data={regNumber} />\n              <TableRow label=\"Address:\" data={address} />\n              <TableRow label=\"Phone:\" data={phone} />\n              <TableRow label=\"Email:\" data={email} />\n            </Table>\n\n            <Table title=\"INDUSTRY AND CLASSIFICATION\">\n              <TableRow label=\"Industry:\" data={industry} />\n              <TableRow label=\"Comp. size:\" data={size} />\n              <TableRow label=\"Employees:\" data={employees} />\n            </Table>\n          </div>\n\n          <div className=\"MainInfoTable Finance\">\n            <div className=\"MainInfoTable_Title\">FINANCE</div>\n            <div className=\"Reports\">\n              <div className=\"Report_First\">\n                <div className=\"Report_Title\">\n                  <div>Income Statement</div> <div>[in RSD thousand]</div>\n                </div>\n                <table className=\"Report_Table\">\n                  <tbody className=\"Report_TBody First_TBody\">\n                    <TableRow\n                      label=\"Operating revenue\"\n                      data={\n                        operatingRevenue.toLocaleString() || operatingRevenue\n                      }\n                    />\n                    <TableRow\n                      label=\"Operating expenses\"\n                      data={`-${\n                        operatingExpenses.toLocaleString() || operatingExpenses\n                      }`}\n                    />\n                    <TableRow\n                      label=\"Operating P/L [=EBIT]\"\n                      data={ebit.toLocaleString()}\n                    />\n                    <TableRow\n                      label=\"Financial revenue\"\n                      data={\n                        financialRevenue.toLocaleString() || financialRevenue\n                      }\n                    />\n                    <TableRow\n                      label=\"Financial expenses\"\n                      data={`-${\n                        financialExpenses.toLocaleString() || financialExpenses\n                      }`}\n                    />\n                    <TableRow\n                      label=\"Financial P/L\"\n                      data={finResult.toLocaleString()}\n                    />\n                    <TableRow\n                      label=\"Extr. and other revenue\"\n                      data={otherRevenue.toLocaleString() || otherRevenue}\n                    />\n                    <TableRow\n                      label=\"Extr. and other expenses\"\n                      data={`-${\n                        otherExpenses.toLocaleString() || otherExpenses\n                      }`}\n                    />\n                    <TableRow\n                      label=\"Extr. and other P/L\"\n                      data={otherResult.toLocaleString()}\n                    />\n                    <TableRow\n                      label=\"P/L prior taxation\"\n                      data={netIncomePriorTax.toLocaleString()}\n                    />\n                    <TableRow\n                      label=\"Taxation\"\n                      data={`-${taxation.toLocaleString() || taxation}`}\n                    />\n                    <TableRow\n                      label=\"P/L for period [=Net income]\"\n                      data={netIncome.toLocaleString()}\n                    />\n                  </tbody>\n                </table>\n              </div>\n\n              <div className=\"Report_Second\">\n                <div className=\"Report_Title\">\n                  <div>Balance Sheet</div> <div>[in RSD thousand]</div>\n                </div>\n                <table className=\"Report_Table\">\n                  <tbody className=\"Report_TBody Second_TBody\">\n                    <TableRow\n                      label=\"Fixed assets\"\n                      data={fixedAssets.toLocaleString() || fixedAssets}\n                    />\n                    <TableRow\n                      label=\"Current assets\"\n                      data={currentAssets.toLocaleString() || currentAssets}\n                    />\n                    <TableRow\n                      label=\"Total assets\"\n                      data={totalAssets.toLocaleString()}\n                    />\n                    <TableRow\n                      label=\"Equity\"\n                      data={equity.toLocaleString() || equity}\n                    />\n                    <TableRow\n                      label=\"Long term liabilities\"\n                      data={\n                        longTermLiabilities.toLocaleString() ||\n                        longTermLiabilities\n                      }\n                    />\n                    <TableRow\n                      label=\"Short term liabilities\"\n                      data={\n                        shortTermLiabilities.toLocaleString() ||\n                        shortTermLiabilities\n                      }\n                    />\n                    <TableRow\n                      label=\"Total sh. funds and liabilities\"\n                      data={totalFunds.toLocaleString()}\n                    />\n                  </tbody>\n                </table>\n              </div>\n            </div>\n\n            <div className=\"Ratios\">\n              <div className=\"Report_Title\">Ratios</div>\n              <div className=\"Ratios_Main\">\n                <table className=\"Report_Table\">\n                  <tbody className=\"Report_TBody Left_TBody\">\n                    <TableRow label=\"Liqudity\" />\n                    <TableRow\n                      label=\"Current ratio\"\n                      data={currentRatio.toFixed(2)}\n                    />\n                    <TableRow\n                      label=\"Net operating assets [=NOA]\"\n                      data={noa.toLocaleString()}\n                    />\n\n                    <TableRow label=\"Turnover\" />\n                    <TableRow\n                      label=\"Fixed Asset Turnover Ratio\"\n                      data={fixedAssetsTurnoverRatio.toFixed(2)}\n                    />\n                    <TableRow\n                      label=\"Total Asset Turnover Ratio\"\n                      data={totalAssetsTurnoverRatio.toFixed(2)}\n                    />\n                  </tbody>\n                </table>\n\n                <table className=\"Report_Table\">\n                  <tbody className=\"Report_TBody Right_TBody\">\n                    <TableRow label=\"Solvency\" />\n                    <TableRow\n                      label=\"Debt Equity Ratio\"\n                      data={debtToEquityRatio.toFixed(2)}\n                    />\n\n                    <TableRow label=\"Profitability\" />\n                    <TableRow\n                      label=\"EBIT margin\"\n                      data={\n                        ebitMargin > 0 ? `${ebitMargin.toFixed(2)}%` : `n.a.`\n                      }\n                    />\n                    <TableRow\n                      label=\"Profit margin\"\n                      data={\n                        profitMargin > 0\n                          ? `${profitMargin.toFixed(2)}%`\n                          : `n.a.`\n                      }\n                    />\n                    <TableRow label=\"Return on Assets [=ROA]\" data={roa} />\n                    <TableRow label=\"Return on Equity [=ROE]\" data={roe} />\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"CustomerShowContainer_Right\">\n          <div className=\"HighlightData One\">\n            <div className=\"HighlightData_Data\">\n              <span className=\"Currency\">RSD</span>\n              <div>{`${(operatingRevenue / 1000).toFixed(2)}mil.`}</div>\n            </div>\n            <div className=\"HighlightData_Title\">TURNOVER</div>\n          </div>\n          <div className=\"HighlightData Two\">\n            <div className=\"HighlightData_Data\">\n              <div>\n                <ProfitabilityCircle\n                  percent={ebitMargin}\n                  colorOne=\"#ffa20021\"\n                  colorTwo=\"#ffa000\"\n                />\n              </div>\n            </div>\n            <div className=\"HighlightData_Title\">EBIT margin</div>\n          </div>\n          <div className=\"HighlightData Three\">\n            <div className=\"HighlightData_Data\">\n              <div>\n                <ProfitabilityCircle\n                  percent={profitMargin}\n                  colorOne=\"#46d4b31f\"\n                  colorTwo=\"#46d4b4\"\n                />\n              </div>\n            </div>\n            <div className=\"HighlightData_Title\">PROFIT margin</div>\n          </div>\n          <div className=\"HighlightData Four\">\n            <div className=\"HighlightData_Data\">\n              <div>{debtToEquityRatio.toFixed(2)}</div>\n            </div>\n            <div className=\"HighlightData_Title\">DEBT EQUITY RATIO</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  //// Customer delete part\n  let content = \"Are you sure you want to delete a customer?\";\n  if (props.particularCustomer) {\n    content = `Are you sure you want to delete customer '${props.particularCustomer.customerData.companyName}'?`;\n  }\n\n  if (props.isLoading) {\n    particularCustomerShow = <Spinner />;\n    content = <Spinner />;\n  }\n\n  let actions = (\n    <React.Fragment>\n      <button\n        onClick={() => props.deleteCustomer(tokenRef.current, idRef.current)}\n        className=\"Button Delete\"\n      >\n        DELETE\n      </button>\n      <button className=\"Button\" onClick={closeModal}>\n        CANCEL\n      </button>\n    </React.Fragment>\n  );\n\n  return (\n    <div className=\"CustomerShow\">\n      {props.particularCustomer ? particularCustomerShow : null}\n      {props.isDeletedSuccessfully ? (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { from: props.location },\n          }}\n        />\n      ) : null}\n      <Modal\n        show={showModal}\n        content={content}\n        actions={actions}\n        onDismiss={closeModal}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    particularCustomer: state.customers.particularCustomer,\n    token: state.auth.idToken,\n    isLoading: state.customers.loading,\n    isDeletedSuccessfully: state.customers.isDeletedSuccessfully,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchOneCustomer: (token, id) =>\n      dispatch(actions.fetchOneCustomer(token, id)),\n    deleteCustomer: (token, id) => dispatch(actions.customerDelete(token, id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerShow);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport * as actions from \"../../../store/actions\";\nimport Button from \"../../../components/UI/Button/Button\";\n\nconst Logout = (props) => {\n  const onClickHandler = () => {\n    props.onLogout();\n  };\n\n  return (\n    <div className=\"Logout\">\n      <Button clicked={onClickHandler}>LOGOUT</Button>\n      {!props.isAuthenticated ? <Redirect to=\"/auth\" /> : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.idToken !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: () => dispatch(actions.logout()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport _ from \"lodash\";\n\nimport \"./Search.scss\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport Icon from \"../../../components/UI/Icon/Icon\";\nimport * as actions from \"../../../store/actions\";\n\nconst Search = (props) => {\n  const [querySearch, setQuerySearch] = useState(props.searchQueryFromRedux);\n\n  const search = useRef(_.debounce((e) => props.onSearch(e), 500)).current; // debounce za pozivanje za 1s, ne konstantno na onChange\n\n  const inputChangeHandler = (e) => {\n    search(e.target.value);\n    setQuerySearch(e.target.value);\n  };\n\n  useEffect(() => {\n    setQuerySearch(props.searchQueryFromRedux);\n  }, [props.searchQueryFromRedux]);\n\n  return (\n    <div className=\"SearchBar\">\n      <Icon icon=\"search\" />\n      <Input\n        type=\"text\"\n        placeholder=\"Search customers\"\n        value={querySearch}\n        changed={(e) => inputChangeHandler(e)}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    searchQueryFromRedux: state.tools.searchQuery,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearch: (query) => dispatch(actions.searchQuery(query)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport \"./Navbar.scss\";\nimport Logout from \"../Auth/Logout/Logout\";\nimport Search from \"../Tools/Search/Search\";\n\nconst Navbar = (props) => {\n  const location = useLocation();\n\n  let title = \"\";\n  switch (location.pathname) {\n    case \"/\":\n      title = \"Explore Your Customers\";\n      break;\n    case \"/new\":\n      title = \"Add New Customer\";\n      break;\n    case \"/documentation\":\n      title = \"Documentation\";\n      break;\n    default:\n      title = \"Browse Your Customer\";\n  }\n\n  return (\n    <div className=\"Navbar\">\n      <div className=\"LogoutSign\">\n        <Logout />\n      </div>\n      {location.pathname === \"/\" ? <Search /> : null}\n      <div className=\"BurgerIcon_And_Title\">\n        <i className=\"fa fa-bars\" onClick={props.toolbarClicked}></i>\n        <h1>{title}</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nimport \"./Documentation.scss\";\nimport TableRow from \"../UI/Table/TableRow/TableRow\";\n\nconst Documentation = (props) => {\n  return (\n    <div className=\"Documentation\">\n      <div className=\"Intro\">\n        <h2>Welcome to Customer Manager</h2>\n        <p>\n          This app is designed to help you to manage your customers by\n          conducting comparative financial analysis.\n        </p>\n        <p>\n          For each customer you can keep data such as contact details, industry\n          classification and size, as well as their financials.\n        </p>\n        <p>Available tools are, as follows:</p>\n        <ul>\n          <li>\n            CREATE - You can create customer by filling application form. Data\n            required by form for each particular customer can be found on\n            Serbian Business Register Agency and includes data from official\n            financial statements. Section below explains how items required by\n            this app can be mapped with positions in official financial\n            statements required by authorities (so called 'AOPs').\n          </li>\n          <li>\n            SEARCH and VIEW - Customers can be searched by their name. By\n            clicking on each customer you can access to detail overview, whereas\n            there are additional options to EDIT or DELETE particular customer.\n            Section below containes definitions of ratios in order to help you\n            to interpret results and obtain better understanding of company's\n            financial position.\n          </li>\n          <li>\n            SORT - Customers can be sorted per name or turnover (in both cases\n            ascending or descending).\n          </li>\n          <li>\n            FILTER - There is posibility to filter customers per industry they\n            belong or per company size.\n          </li>\n        </ul>\n      </div>\n      <h2>Introduction to Ratio analysis</h2>\n      <p>\n        Financial analysis is the process of evaluating businesses to determine\n        its performance and suitability. Typically, it is relied on ratio\n        analysis.\n      </p>\n      <p>\n        Ratio analysis can be defined as the process of ascertaining the\n        financial ratios that are used for indicating the ongoing financial\n        performance of a company using few types of ratios such as liquidity,\n        profitability, activity, debt, market, solvency, efficiency, etc.\n      </p>\n      <p>\n        It is a process used for the calculation of financial ratios for the\n        purpose of evaluating the financial wellbeing of a company. The values\n        used for the calculation of financial ratios of a company are extracted\n        from the financial statements of that company.\n      </p>\n      <h2>Mapping with Serbian accounting records</h2>\n      <p>\n        Here are presented positions from official financial statements -\n        Balance Sheet and Income Statement perscriebed by Serbian authorities.\n        All positions are mapped with particular items used in this app.\n      </p>\n      <div className=\"Reports\">\n        <div className=\"Report_First\">\n          <div className=\"Report_Title\">Income Statement</div>\n          <table className=\"Report_Table\">\n            <tbody className=\"Report_TBody\">\n              <TableRow label=\"Operating revenue\" data={\"AOP 1001\"} />\n              <TableRow label=\"Operating expenses\" data={\"AOP 1018\"} />\n              <TableRow label=\"Financial revenue\" data={\"AOP 1032\"} />\n              <TableRow label=\"Financial expenses\" data={\"AOP 1040\"} />\n              <TableRow\n                label=\"Extr. and other revenue\"\n                data={\"AOP 1050 + AOP 1052 + AOP 1056\"}\n              />\n              <TableRow\n                label=\"Extr. and other expenses\"\n                data={\"AOP 1051 + AOP 1053 + AOP 1057\"}\n              />\n              <TableRow\n                label=\"Taxation\"\n                data={\"AOP 1060 + AOP 1061 - AOP 1062\"}\n              />\n            </tbody>\n          </table>\n        </div>\n\n        <div className=\"Report_Second\">\n          <div className=\"Report_Title\">Balance Sheet</div>\n          <table className=\"Report_Table\">\n            <tbody className=\"Report_TBody\">\n              <TableRow label=\"Fixed assets\" data={\"AOP 0002\"} />\n              <TableRow label=\"Current assets\" data={\"AOP 0042 + AOP 0043\"} />\n              <TableRow label=\"Equity\" data={\"AOP 0401\"} />\n              <TableRow label=\"Long term liabilities\" data={\"AOP 0424\"} />\n              <TableRow\n                label=\"Short term liabilities\"\n                data={\"AOP 0441 + AOP 0442\"}\n              />\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <h2>Definitions</h2>\n      <p>\n        The various kinds of financial ratios available may be broadly grouped\n        into the following four main categories, based on the data they provide.\n      </p>\n      <h3>Part 1 - Liquidity</h3>\n      <p>\n        This type of ratio helps in measuring the ability of a company to take\n        care of its short-term debt obligations. A higher liquidity ratio\n        represents that the company is highly rich in cash.\n      </p>\n      <ul>\n        <li>\n          <a\n            href=\"https://www.investopedia.com/terms/c/currentratio.asp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Current ratio\n          </a>\n          <p className=\"RatioDef\">\n            The current ratio is the ratio between the current assets and\n            current liabilities of a company. The current ratio is used to\n            indicate the liquidity of an organization in being able to meet its\n            debt obligations in the upcoming twelve months. A higher current\n            ratio will indicate that the organization is highly capable of\n            repaying its short-term debt obligations.\n          </p>\n          <div className=\"Formula\">\n            <div className=\"blue\"></div>Current Ratio = Current Assets / Current\n            Liabilities\n          </div>\n        </li>\n        <li>\n          <a\n            href=\"https://www.investopedia.com/terms/w/workingcapital.asp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Net Operating Assets [=NOA]\n          </a>\n          <p className=\"RatioDef\">\n            Net Operating Assets (also known as Net operating working capital\n            [=NOWC]) is a measure of a company's liquidity and refers to the\n            difference between operating current assets and operating current\n            liabilities. In many cases these calculations are the same and are\n            derived from company cash plus accounts receivable plus inventories,\n            less accounts payable and less accrued expenses. If a company has\n            substantial positive working capital, then it should have the\n            potential to invest and grow. If a company's current assets do not\n            exceed its current liabilities, then it may have trouble growing or\n            paying back creditors, or even go bankrupt.\n          </p>\n          <div className=\"Formula\">\n            <div className=\"blue\"></div>NOA = Current Assets - Current\n            Liabilities\n          </div>\n        </li>\n      </ul>\n      <h3>Part 2 - Turnover</h3>\n      <p>\n        Turnover ratios are used to determine how efficiently the financial\n        assets and liabilities of an organization have been used for the purpose\n        of generating revenues.\n      </p>\n      <ul>\n        <li>\n          <a\n            href=\"https://www.investopedia.com/terms/f/fixed-asset-turnover.asp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Fixed Assets Turnover Ratio\n          </a>\n          <p className=\"RatioDef\">\n            Fixed assets turnover ratio is used to determine the efficiency of\n            an organization in utilizing its fixed assets for the purpose of\n            generating revenues. A high fixed asset turnover ratio often\n            indicates that a firm effectively and efficiently uses its assets to\n            generate revenues. A low fixed asset turnover ratio generally\n            indicates the opposite.\n          </p>\n          <div className=\"Formula\">\n            <div className=\"blue\"></div>Fixed Assets Turnover Ratio = Net Sales\n            / Average Fixed Assets\n          </div>\n        </li>\n        <li>\n          <a\n            href=\"https://www.investopedia.com/terms/a/assetturnover.asp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Total Assets Turnover Ratio\n          </a>\n          <p className=\"RatioDef\">\n            The asset turnover ratio can be used as an indicator of the\n            efficiency with which a company is using its assets to generate\n            revenue. The higher the asset turnover ratio, the more efficient a\n            company is at generating revenue from its assets. Conversely, if a\n            company has a low asset turnover ratio, it indicates it is not\n            efficiently using its assets to generate sales.\n          </p>\n          <div className=\"Formula\">\n            <div className=\"blue\"></div>Total Assets Turnover Ratio = Net Sales\n            / Average Total Assets\n          </div>\n        </li>\n      </ul>\n      <h3>Part 3 - Solvency</h3>\n      <p>\n        Solvency ratios can be defined as a type of ratio that is used to\n        evaluate whether a company is solvent and well capable of paying off its\n        debt obligations or not.\n      </p>\n      <ul>\n        <li>\n          <a\n            href=\"https://www.investopedia.com/terms/d/debtequityratio.asp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Debt Equity Ratio [=D/E]\n          </a>\n          <p className=\"RatioDef\">\n            The debt-equity ratio can be defined as a ratio between total debt\n            and shareholders fund. The debt-equity ratio is used to calculate\n            the leverage of an organization. It is a measure of the degree to\n            which a company is financing its operations through debt versus\n            wholly-owned funds. More specifically, it reflects the ability of\n            shareholder equity to cover all outstanding debts in the event of a\n            business downturn. A high D/E ratio is considered risky for lenders\n            and investors because it suggests that the company is financing a\n            significant amount of its potential growth through borrowing.\n          </p>\n          <div className=\"Formula\">\n            <div className=\"blue\"></div>Debt Equity Ratio = Total Debts /\n            Shareholders Equity\n          </div>\n        </li>\n      </ul>\n      <h3>Part 4 - Profitability</h3>\n      <p>\n        This type of ratio helps in measuring the ability of a company in\n        earning sufficient profits.\n      </p>\n      <ul>\n        <li>\n          <a\n            href=\"https://www.investopedia.com/terms/p/profitmargin.asp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            EBIT margin\n          </a>\n          <p className=\"RatioDef\">\n            Operating Profit Margin (or just operating margin or EBIT margin):\n            By subtracting selling, general and administrative, or operating\n            expenses, from a company's gross profit number, we get operating\n            profit margin, also known as earnings before interest and taxes, or\n            EBIT. Resulting in an income figure that’s available to pay the\n            business' debt and equity holders, as well as the tax department,\n            it's profit from a company’s main, ongoing operations.\n          </p>\n          <div className=\"Formula\">\n            <div className=\"blue\"></div>EBIT margin = EBIT / Operating Revenue\n            (Turnover) x 100\n          </div>\n        </li>\n        <li>\n          <a\n            href=\"https://www.investopedia.com/terms/p/profitmargin.asp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Profit margin\n          </a>\n          <p className=\"RatioDef\">\n            Net profit margin is calculated by dividing the net profits by net\n            sales, or by dividing the net income by revenue realized over a\n            given time period. In the context of profit margin calculations, net\n            profit and net income are used interchangeably. Similarly, sales and\n            revenue are used interchangeably. Net profit is determined by\n            subtracting all the associated expenses, including costs towards raw\n            material, labor, operations, rentals, interest payments, and taxes,\n            from the total revenue generated.\n          </p>\n          <div className=\"Formula\">\n            <div className=\"blue\"></div>Profit margin = Net Income / Operating\n            Revenue (Turnover) x 100\n          </div>\n        </li>\n        <li>\n          <a\n            href=\"https://www.investopedia.com/terms/r/returnonassets.asp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Return on Assets [=ROA]\n          </a>\n          <p className=\"RatioDef\">\n            Return on assets [=ROA] is an indicator of how profitable a company\n            is relative to its total assets. ROA gives a manager, investor, or\n            analyst an idea as to how efficient a company's management is at\n            using its assets to generate earnings. Return on assets is displayed\n            as a percentage. Higher ROA indicates more asset efficiency.\n          </p>\n          <div className=\"Formula\">\n            <div className=\"blue\"></div>ROA = Net Income / Total Assets\n          </div>\n        </li>\n        <li>\n          <a\n            href=\"https://www.investopedia.com/terms/r/returnonequity.asp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Return on Equity [=ROE]\n          </a>\n          <p className=\"RatioDef\">\n            Return on equity [=ROE] is a measure of financial performance\n            calculated by dividing net income by shareholders' equity. Because\n            shareholders' equity is equal to a company’s assets minus its debt,\n            ROE is considered the return on net assets. ROE is considered a\n            measure of how effectively management is using a company’s assets to\n            create profits.\n          </p>\n          <div className=\"Formula\">\n            <div className=\"blue\"></div>ROE = Net Income / Shareholders Equity\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Documentation;\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport \"./Backdrop.scss\";\n\nconst Backdrop = (props) => {\n  return (\n    <div\n      className={classNames(\"Backdrop\", {\n        OpenBackdrop: props.open,\n        CloseBackdrop: !props.open,\n      })}\n      onClick={props.toolbarClosedHandler}\n    ></div>\n  );\n};\n\nexport default Backdrop;\n","import React, { useState } from \"react\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport \"./Home.scss\";\nimport Toolbar from \"../Toolbar/Toolbar\";\nimport CustomersList from \"../Customers/CustomersList/CustomersList\";\nimport CustomerCreate from \"../Customers/CustomerCreate/CustomerCreate\";\nimport CustomerEdit from \"../Customers/CustomerEdit/CustomerEdit\";\nimport CustomerShow from \"../Customers/CustomerShow/CustomerShow\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Documentation from \"../../components/Documentation/Documentation\";\nimport Backdrop from \"../../components/UI/Modal/Backdrop/Backdrop\";\n\nconst Home = () => {\n  const [toolbarIsVisible, setToolbarIsVisible] = useState(false);\n\n  const toolbarClosedHandler = () => {\n    setToolbarIsVisible(false);\n  };\n\n  const toolbarToggleHandler = () => {\n    setToolbarIsVisible(!toolbarIsVisible);\n  };\n\n  return (\n    <div className=\"Home\">\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Backdrop\n          open={toolbarIsVisible}\n          toolbarClosedHandler={toolbarClosedHandler}\n        />\n        <Toolbar open={toolbarIsVisible} />\n        <Navbar toolbarClicked={toolbarToggleHandler} />\n        <Switch>\n          <Route path=\"/\" exact component={CustomersList} />\n          <Route path=\"/new\" exact component={CustomerCreate} />\n          <Route path=\"/edit/:id\" exact component={CustomerEdit} />\n          <Route path=\"/show/:id\" exact component={CustomerShow} />\n          <Route path=\"/documentation\" exact component={Documentation} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      return isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/auth\",\n            state: { from: props.location },\n          }}\n        />\n      );\n    }}\n  />\n);\n\nexport default PrivateRoute;\n","import React, { useEffect, useRef } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport Auth from \"./containers/Auth/Auth\";\nimport Home from \"./containers/Home/Home\";\nimport PrivateRoute from \"./components/helper/PrivateRoute\";\nimport * as actions from \"./store/actions\";\n\nconst App = (props) => {\n  const onAutoLoginRef = useRef(props.onAutoLogin);\n\n  useEffect(() => {\n    onAutoLoginRef.current();\n  }, []);\n\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/auth\" exact component={Auth} />\n          <PrivateRoute\n            isAuthenticated={props.isAuthenticated}\n            path=\"/\"\n            component={Home}\n          />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.idToken !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAutoLogin: () => dispatch(actions.authCheckState()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  loading: false,\n  idToken: null,\n  userId: null,\n  error: null,\n};\n\nconst authStart = (state, action) => {\n  return { ...state, loading: true, error: null };\n};\n\nconst authSucess = (state, action) => {\n  return {\n    ...state,\n    loading: false,\n    error: null,\n    idToken: action.idToken,\n    userId: action.userId,\n  };\n};\n\nconst authFail = (state, action) => {\n  return { ...state, loading: false, error: action.error };\n};\n\nconst authLogout = (state, action) => {\n  return { ...state, idToken: null, userId: null };\n};\n\n// ALL reducers for authentication combined\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS:\n      return authSucess(state, action);\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  loading: false,\n  error: null,\n  allCustomers: [],\n  isAddedSuccessfully: false,\n  isEditedSuccessfully: false,\n  isDeletedSuccessfully: false,\n  particularCustomer: \"\",\n};\n\n// 1. adding new customer\nconst addCustomerStart = (state, action) => {\n  return { ...state, loading: true, error: null };\n};\n\nconst addCustomerSucess = (state, action) => {\n  const newCustomer = {\n    ...action.customerData,\n    id: action.customerId,\n  };\n\n  return {\n    ...state,\n    loading: false,\n    allCustomers: [...state.allCustomers, newCustomer],\n    isAddedSuccessfully: true,\n  };\n};\n\nconst addCustomerFail = (state, action) => {\n  return { ...state, loading: false, error: action.error };\n};\n\nconst addCustomerFinished = (state, action) => {\n  return { ...state, isAddedSuccessfully: false };\n};\n\n// 2. fetching all customers\nconst fetchCustomersStart = (state, action) => {\n  return { ...state, loading: true, error: null };\n};\n\nconst fetchCustomersSuccess = (state, action) => {\n  let res = action.allCustomers.map((el) => {\n    const obj =  { ...el, customerData: { ...el.customerData } };;\n    [\n      \"operatingRevenue\",\n      \"operatingExpenses\",\n      \"financialRevenue\",\n      \"financialExpenses\",\n      \"otherRevenue\",\n      \"otherExpenses\",\n      \"taxation\",\n      \"fixedAssets\",\n      \"currentAssets\",\n      \"equity\",\n      \"longTermLiabilities\",\n      \"shortTermLiabilities\",\n    ].forEach((k) =>   \n      obj.customerData[k] = parseInt(obj.customerData[k])\n    );\n    return obj;\n  });\n  \n  return {\n    ...state,\n    loading: false,\n    allCustomers: res,\n  };\n};\n\nconst fetchCustomersFail = (state, action) => {\n  return { ...state, loading: false, error: action.error };\n};\n\n// 3. fetching one particular customer\nconst fetchCustomerStart = (state, action) => {\n  return { ...state, loading: true, error: null };\n};\n\nconst fetchCustomerSuccess = (state, action) => {\n  let res =  { ...action.particularCustomer, customerData: { ...action.particularCustomer.customerData } };;\n  [\n    \"operatingRevenue\",\n    \"operatingExpenses\",\n    \"financialRevenue\",\n    \"financialExpenses\",\n    \"otherRevenue\",\n    \"otherExpenses\",\n    \"taxation\",\n    \"fixedAssets\",\n    \"currentAssets\",\n    \"equity\",\n    \"longTermLiabilities\",\n    \"shortTermLiabilities\",\n  ].forEach((k) =>   \n    res.customerData[k] = parseInt(res.customerData[k])\n    );\n\n  return {\n    ...state,\n    loading: false,\n    particularCustomer: res,\n  };\n};\n\nconst fetchCustomerFail = (state, action) => {\n  return { ...state, loading: false, error: action.error };\n};\n\n// 4. editing customer\nconst editCustomerStart = (state, action) => {\n  return { ...state, loading: true, error: null };\n};\n\nconst editCustomerSuccess = (state, action) => {\n  const editedCustomer = {\n    ...action.customerData,\n    id: action.customerId,\n  };\n\n  return {\n    ...state,\n    loading: false,\n    allCustomers: state.allCustomers.map((el) =>\n      el.id === action.customerId ? editedCustomer : el\n    ),\n    isEditedSuccessfully: true,\n  };\n};\n\nconst editCustomerFail = (state, action) => {\n  return { ...state, loading: false, error: action.error };\n};\n\nconst editCustomerFinished = (state, action) => {\n  return { ...state, isEditedSuccessfully: false };\n};\n\n// 4. deleting customer\nconst deleteCustomerStart = (state, action) => {\n  return { ...state, loading: true, error: null };\n};\n\nconst deleteCustomerSuccess = (state, action) => {\n  return {\n    ...state,\n    loading: false,\n    allCustomers: state.allCustomers.filter(\n      (el) => el.id !== action.customerId\n    ),\n    isDeletedSuccessfully: true,\n  };\n};\n\nconst deleteCustomerFail = (state, action) => {\n  return { ...state, loading: false, error: action.error };\n};\n\nconst deleteCustomerFinished = (state, action) => {\n  return { ...state, isDeletedSuccessfully: false };\n};\n\n// ALL REDUCERS COMBINED\nconst customerReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_CUSTOMER_START:\n      return addCustomerStart(state, action);\n    case actionTypes.ADD_CUSTOMER_SUCCESS:\n      return addCustomerSucess(state, action);\n    case actionTypes.ADD_CUSTOMER_FAIL:\n      return addCustomerFail(state, action);\n    case actionTypes.ADD_CUSTOMER_FINISHED:\n      return addCustomerFinished(state, action);\n    case actionTypes.FETCH_CUSTOMERS_START:\n      return fetchCustomersStart(state, action);\n    case actionTypes.FETCH_CUSTOMERS_SUCCESS:\n      return fetchCustomersSuccess(state, action);\n    case actionTypes.FETCH_CUSTOMERS_FAIL:\n      return fetchCustomersFail(state, action);\n    case actionTypes.FETCH_CUSTOMER_START:\n      return fetchCustomerStart(state, action);\n    case actionTypes.FETCH_CUSTOMER_SUCCESS:\n      return fetchCustomerSuccess(state, action);\n    case actionTypes.FETCH_CUSTOMER_FAIL:\n      return fetchCustomerFail(state, action);\n    case actionTypes.EDIT_CUSTOMER_START:\n      return editCustomerStart(state, action);\n    case actionTypes.EDIT_CUSTOMER_SUCCESS:\n      return editCustomerSuccess(state, action);\n    case actionTypes.EDIT_CUSTOMER_FAIL:\n      return editCustomerFail(state, action);\n    case actionTypes.EDIT_CUSTOMER_FINISHED:\n      return editCustomerFinished(state, action);\n    case actionTypes.DELETE_CUSTOMER_START:\n      return deleteCustomerStart(state, action);\n    case actionTypes.DELETE_CUSTOMER_SUCCESS:\n      return deleteCustomerSuccess(state, action);\n    case actionTypes.DELETE_CUSTOMER_FAIL:\n      return deleteCustomerFail(state, action);\n    case actionTypes.DELETE_CUSTOMER_FINISHED:\n      return deleteCustomerFinished(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default customerReducer;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  searchQuery: \"\",\n  sortQuery: \"\",\n  filterQueryOne: {\n    Micro: false,\n    Small: false,\n    Medium: false,\n    Large: false,\n  },\n  filterQueryTwo: {\n    Education: false,\n    Finance: false,\n    Health: false,\n    IT: false,\n    Production: false,\n    Other: false,\n  },\n};\n\n// search\nconst searchQuery = (state, action) => {\n  return { ...state, searchQuery: action.query };\n};\n\n// sort\nconst sortQuery = (state, action) => {\n  return { ...state, sortQuery: action.query };\n};\n\n// filter\nconst filterQueryOne = (state, action) => {\n  return {\n    ...state,\n    filterQueryOne: {\n      ...state.filterQueryOne,\n      [action.query]: !state.filterQueryOne[action.query],\n    },\n  };\n};\n\nconst filterQueryTwo = (state, action) => {\n  return {\n    ...state,\n    filterQueryTwo: {\n      ...state.filterQueryTwo,\n      [action.query]: !state.filterQueryTwo[action.query],\n    },\n  };\n};\n\nconst resetAllFilters = (state, action) => {\n  return {\n    ...initialState,\n  };\n};\n\nconst toolsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SEARCH_QUERY:\n      return searchQuery(state, action);\n    case actionTypes.SORT_QUERY:\n      return sortQuery(state, action);\n    case actionTypes.FILTER_QUERY_ONE:\n      return filterQueryOne(state, action);\n    case actionTypes.FILTER_QUERY_TWO:\n      return filterQueryTwo(state, action);\n    case actionTypes.RESET_ALL_FILTERS:\n      return resetAllFilters(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default toolsReducer;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://customer-manager-4fb6c.firebaseio.com/\",\n});\n\nexport default instance;\n","import { put, delay, call } from \"redux-saga/effects\";\nimport axios from \"../../axios\";\n\nimport * as actions from \"../actions\";\n\n// 1.\nexport function* authUserSaga(action) {\n  // AUTH START\n  yield put(actions.authStart());\n\n  const data = {\n    email: action.email,\n    password: action.password,\n    returnSecureToken: true,\n  };\n\n  //   const url =\n  //     \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBsYNXD4YFAmfFwwDB1BScL105tr_FpOBo\";\n  const url =\n    \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBsYNXD4YFAmfFwwDB1BScL105tr_FpOBo\";\n\n  try {\n    const response = yield call(() => (axios.post(url, data)));\n\n    // local storage\n    const expirationDate = yield new Date(\n      new Date().getTime() + response.data.expiresIn * 1000\n    );\n    yield call([localStorage, 'setItem'], \"token\", response.data.idToken)\n    yield call([localStorage, 'setItem'], \"expirationDate\", expirationDate)\n    yield call([localStorage, 'setItem'], \"userId\", response.data.localId)\n\n    // AUTH SUCCESS\n    yield put(\n      actions.authSuccess(response.data.idToken, response.data.localId)\n    );\n    // AUTH CHECK TIMEOUT\n    yield put(actions.checkAuthTimeout(response.data.expiresIn));\n  } catch (error) {\n    // AUTH FAIL\n    yield put(actions.authFail(error.response.data.error));\n  }\n}\n\n// 2.\nexport function* checkAuthTimeoutSaga(action) {\n  yield delay(action.expirationTime * 1000);\n  yield put(actions.logout()); // initiateLogout\n}\n\n// 3.\nexport function* logoutSaga(action) {\n  yield call([localStorage, 'removeItem'], \"token\")\n  yield call([localStorage, 'removeItem'], \"expirationDate\")\n  yield call([localStorage, 'removeItem'], \"userId\")\n  yield put(actions.logoutSucced());\n}\n\n// 4.\nexport function* authCheckStateSaga(action) {\n  const token = yield localStorage.getItem(\"token\");\n  if (!token) {\n    yield put(actions.logout()); // initiateLogout\n  } else {\n    const expirationDate = yield new Date(\n      localStorage.getItem(\"expirationDate\")\n    );\n    if (expirationDate <= new Date()) {\n      yield put(actions.logout()); // initiateLogout\n    } else {\n      const userId = yield localStorage.getItem(\"userId\");\n      yield put(actions.authSuccess(token, userId));\n      yield put(\n        actions.checkAuthTimeout(\n          (expirationDate.getTime() - new Date().getTime()) / 1000\n        )\n      );\n    }\n  }\n}\n","import { put, call } from \"redux-saga/effects\";\nimport axios from \"../../axios\";\n\nimport * as actions from \"../actions\";\n\n/// 1.\nexport function* customerAddSaga(action) {\n  // START\n  yield put(actions.addCustomerStart());\n\n  try {\n    const response = yield call(() =>\n      axios.post(`/customers.json?auth=${action.token}`, action.customerData)\n    );\n\n    if (response) {\n      // SUCCESS\n      yield put(\n        actions.addCustomerSuccess(response.data.name, action.customerData)\n      );\n    }\n    // FINISHED\n    yield put(actions.addCustomerFinished());\n  } catch (error) {\n    // FAIL\n    yield put(actions.addCustomerFail(\"Something went wrong\"));\n  }\n}\n\n/// 2.\nexport function* fetchAllCustomersSaga(action) {\n  // START\n  yield put(actions.fetchCustomersStart());\n\n  try {\n    const response = yield call(() =>\n      axios.get(\n        `/customers.json?auth=${action.token}&orderBy=\"userId\"&equalTo=\"${action.userId}\"`\n      )\n    );\n\n    if (response) {\n      const fetchedCustomers = [];\n      for (let key in response.data) {\n        fetchedCustomers.push({\n          ...response.data[key],\n          id: key,\n        });\n      }\n\n      // SUCCESS\n      yield put(actions.fetchCustomersSuccess(fetchedCustomers));\n    }\n  } catch (error) {\n    // FAIL\n    yield put(actions.fetchCustomersFail(error.response.data.error));\n  }\n}\n\n/// 3.\nexport function* fetchOneCustomerSaga(action) {\n  // START\n  yield put(actions.fetchCustomerStart());\n\n  try {\n    const response = yield call(() =>\n      axios.get(\n        `/customers.json?auth=${action.token}&orderBy=\"$key\"&equalTo=\"${action.id}\"`\n      )\n    );\n    if (response) {\n      let fetchedCustomer = {};\n      for (let key in response.data) {\n        fetchedCustomer = {\n          ...response.data[key],\n          id: key,\n        };\n      }\n\n      // SUCCESS\n      yield put(actions.fetchCustomerSuccess(fetchedCustomer));\n    }\n  } catch (error) {\n    // FAIL\n    yield put(actions.fetchCustomerFail(error.response.data.error));\n  }\n}\n\n/// 4.\nexport function* customerEditSaga(action) {\n  // START\n  yield put(actions.editCustomerStart());\n\n  try {\n    const response = yield call(() =>\n      axios.patch(\n        `/customers/${action.id}/.json?auth=${action.token}`,\n        action.customerData\n      )\n    );\n    if (response) {\n      // SUCCESS\n      yield put(actions.editCustomerSuccess(action.id, response.data));\n      // FINISHED\n      yield put(actions.editCustomerFinished());\n    }\n  } catch (error) {\n    // FAIL\n    yield put(actions.editCustomerFail(error.response.data.error));\n  }\n}\n\n/// 5.\nexport function* customerDeleteSaga(action) {\n  // START\n  yield put(actions.deleteCustomerStart());\n\n  try {\n    yield call(() =>\n      axios.delete(`/customers/${action.id}/.json?auth=${action.token}`)\n    );\n\n    // SUCCESS\n    yield put(actions.deleteCustomerSuccess(action.id));\n    // FINISHED\n    yield put(actions.deleteCustomerFinished());\n  } catch (error) {\n    // FAIL\n    yield put(actions.deleteCustomerFail(error.response.data.error));\n  }\n}\n","import { takeLatest, all } from \"redux-saga/effects\";\n\nimport * as actionTypes from \"../actions/actionTypes\";\nimport {\n  authUserSaga,\n  checkAuthTimeoutSaga,\n  logoutSaga,\n  authCheckStateSaga,\n} from \"./auth\";\n\nimport {\n  customerAddSaga,\n  fetchAllCustomersSaga,\n  fetchOneCustomerSaga,\n  customerEditSaga,\n  customerDeleteSaga,\n} from \"./customers\";\n\nexport function* watchAuthSaga() {\n  yield all([\n    takeLatest(actionTypes.AUTH_USER, authUserSaga),\n    takeLatest(actionTypes.AUTH_CHECK_TIMEOUT, checkAuthTimeoutSaga),\n    takeLatest(actionTypes.AUTH_INITIATE_LOGOUT, logoutSaga),\n    takeLatest(actionTypes.AUTH_CHECK_STATE, authCheckStateSaga),\n  ]);\n}\n\nexport function* watchCustomerSaga() {\n  yield all([\n    takeLatest(actionTypes.ADD_CUSTOMER, customerAddSaga),\n    takeLatest(actionTypes.FETCH_ALL_CUSTOMERS, fetchAllCustomersSaga),\n    takeLatest(actionTypes.FETCH_ONE_CUSTOMER, fetchOneCustomerSaga),\n    takeLatest(actionTypes.EDIT_CUSTOMER, customerEditSaga),\n    takeLatest(actionTypes.DELETE_CUSTOMER, customerDeleteSaga),\n  ]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport authReducer from \"./store/reducers/auth\";\nimport customerReducer from \"./store/reducers/customers\";\nimport toolsReducer from \"./store/reducers/tools\";\nimport { watchAuthSaga, watchCustomerSaga } from \"./store/sagas/index\";\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n    : compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  customers: customerReducer,\n  tools: toolsReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(watchAuthSaga);\nsagaMiddleware.run(watchCustomerSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}